{
    "openapi": "3.0.0",
    "info": {
        "title": "BDM Digital API API",
        "description": "",
        "version": "6.7.2",
        "contact": {
            "name": "BDM Digital API",
            "url": "http:\/\/localhost:8000",
            "email": "wesandradealves@gmail.com"
        }
    },
    "servers": [{
        "url": "http:\/\/localhost:8000\/wp-json"
    }],
    "tags": [{
        "name": "oembed\/1.0",
        "description": ""
    }, {
        "name": "wp-openapi\/v1",
        "description": ""
    }, {
        "name": "wp\/v2",
        "description": ""
    }, {
        "name": "wp-site-health\/v1",
        "description": ""
    }, {
        "name": "wp-block-editor\/v1",
        "description": ""
    }, {
        "name": "acf\/v3",
        "description": ""
    }],
    "components": {
        "schemas": {
            "post": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "post",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "permalink_template": {
                        "description": "Permalink template for the post.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "generated_slug": {
                        "description": "Slug automatically generated from the post title.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "class_list": {
                        "description": "An array of the class names for the post container element.",
                        "type": "array",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "author": {
                        "description": "The ID for the author of the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "excerpt": {
                        "description": "The excerpt for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Excerpt for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML excerpt for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the excerpt is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "featured_media": {
                        "description": "The ID of the featured media for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "comment_status": {
                        "description": "Whether or not comments are open on the post.",
                        "type": "string",
                        "enum": ["open", "closed"],
                        "context": ["view", "edit"]
                    },
                    "ping_status": {
                        "description": "Whether or not the post can be pinged.",
                        "type": "string",
                        "enum": ["open", "closed"],
                        "context": ["view", "edit"]
                    },
                    "format": {
                        "description": "The format for the post.",
                        "type": "string",
                        "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"],
                        "context": ["view", "edit"]
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            },
                            "footnotes": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": ""
                            }
                        }
                    },
                    "sticky": {
                        "description": "Whether or not the post should be treated as sticky.",
                        "type": "boolean",
                        "context": ["view", "edit"]
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "categories": {
                        "description": "The terms assigned to the post in the category taxonomy.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "context": ["view", "edit"]
                    },
                    "tags": {
                        "description": "The terms assigned to the post in the post_tag taxonomy.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "context": ["view", "edit"]
                    },
                    "post_format": {
                        "description": "The terms assigned to the post in the post_format taxonomy.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-sticky",
                    "title": "The current user can sticky this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "sticky": {
                                "type": "boolean"
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-author",
                    "title": "The current user can change the author on this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "integer"
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-categories",
                    "title": "The current user can assign terms in the category taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "categories": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-create-categories",
                    "title": "The current user can create terms in the category taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "categories": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-tags",
                    "title": "The current user can assign terms in the post_tag taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-create-tags",
                    "title": "The current user can create terms in the post_tag taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-post_format",
                    "title": "The current user can assign terms in the post_format taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "post_format": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-create-post_format",
                    "title": "The current user can create terms in the post_format taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/posts\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "post_format": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }]
            },
            "post-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "post-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the revision unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "excerpt": {
                        "description": "The excerpt for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Excerpt for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML excerpt for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the excerpt is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            },
                            "footnotes": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": ""
                            }
                        }
                    },
                    "preview_link": {
                        "description": "Preview link for the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["edit"],
                        "readonly": true
                    }
                }
            },
            "page": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "page",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "permalink_template": {
                        "description": "Permalink template for the post.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "generated_slug": {
                        "description": "Slug automatically generated from the post title.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "class_list": {
                        "description": "An array of the class names for the post container element.",
                        "type": "array",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "parent": {
                        "description": "The ID for the parent of the post.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "author": {
                        "description": "The ID for the author of the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "excerpt": {
                        "description": "The excerpt for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Excerpt for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML excerpt for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the excerpt is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "featured_media": {
                        "description": "The ID of the featured media for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "comment_status": {
                        "description": "Whether or not comments are open on the post.",
                        "type": "string",
                        "enum": ["open", "closed"],
                        "context": ["view", "edit"]
                    },
                    "ping_status": {
                        "description": "Whether or not the post can be pinged.",
                        "type": "string",
                        "enum": ["open", "closed"],
                        "context": ["view", "edit"]
                    },
                    "menu_order": {
                        "description": "The order of the post in relation to other posts.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            },
                            "footnotes": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": ""
                            }
                        }
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/pages\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/pages\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-author",
                    "title": "The current user can change the author on this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/pages\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "integer"
                            }
                        }
                    }
                }]
            },
            "page-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "page-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the revision unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "excerpt": {
                        "description": "The excerpt for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Excerpt for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML excerpt for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the excerpt is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            },
                            "footnotes": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": ""
                            }
                        }
                    },
                    "preview_link": {
                        "description": "Preview link for the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["edit"],
                        "readonly": true
                    }
                }
            },
            "attachment": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "attachment",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "permalink_template": {
                        "description": "Permalink template for the post.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "generated_slug": {
                        "description": "Slug automatically generated from the post title.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "class_list": {
                        "description": "An array of the class names for the post container element.",
                        "type": "array",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "author": {
                        "description": "The ID for the author of the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "featured_media": {
                        "description": "The ID of the featured media for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "comment_status": {
                        "description": "Whether or not comments are open on the post.",
                        "type": "string",
                        "enum": ["open", "closed"],
                        "context": ["view", "edit"]
                    },
                    "ping_status": {
                        "description": "Whether or not the post can be pinged.",
                        "type": "string",
                        "enum": ["open", "closed"],
                        "context": ["view", "edit"]
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            }
                        }
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "alt_text": {
                        "description": "Alternative text to display when attachment is not displayed.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "caption": {
                        "description": "The attachment caption.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Caption for the attachment, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML caption for the attachment, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "description": {
                        "description": "The attachment description.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Description for the attachment, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML description for the attachment, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "media_type": {
                        "description": "Attachment type.",
                        "type": "string",
                        "enum": ["image", "file"],
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "mime_type": {
                        "description": "The attachment MIME type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "media_details": {
                        "description": "Details about the media file, specific to its type.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "post": {
                        "description": "The ID for the associated post of the attachment.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "source_url": {
                        "description": "URL to the original attachment file.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "missing_image_sizes": {
                        "description": "List of the missing image sizes of the attachment.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["edit"],
                        "readonly": true
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/media\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-author",
                    "title": "The current user can change the author on this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/media\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "author": {
                                "type": "integer"
                            }
                        }
                    }
                }]
            },
            "nav_menu_item": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "nav_menu_item",
                "type": "object",
                "properties": {
                    "title": {
                        "description": "The title for the object.",
                        "type": ["string", "object"],
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the object, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the object, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "type_label": {
                        "description": "The singular label used to describe this type of menu item.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "type": {
                        "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                        "type": "string",
                        "enum": ["taxonomy", "post_type", "post_type_archive", "custom"],
                        "context": ["view", "edit", "embed"],
                        "default": "custom"
                    },
                    "status": {
                        "description": "A named status for the object.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "default": "publish",
                        "context": ["view", "edit", "embed"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the object.",
                        "type": "integer",
                        "minimum": 0,
                        "default": 0,
                        "context": ["view", "edit", "embed"]
                    },
                    "attr_title": {
                        "description": "Text for the title attribute of the link element for this menu item.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "classes": {
                        "description": "Class names for the link element of this menu item.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit", "embed"]
                    },
                    "description": {
                        "description": "The description of this menu item.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "menu_order": {
                        "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                        "context": ["view", "edit", "embed"],
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                    },
                    "object": {
                        "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                        "context": ["view", "edit", "embed"],
                        "type": "string"
                    },
                    "object_id": {
                        "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                        "context": ["view", "edit", "embed"],
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                    },
                    "target": {
                        "description": "The target attribute of the link element for this menu item.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "enum": ["_blank", ""]
                    },
                    "url": {
                        "description": "The URL to which this menu item points.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"]
                    },
                    "xfn": {
                        "description": "The XFN relationship expressed in the link of this menu item.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit", "embed"]
                    },
                    "invalid": {
                        "description": "Whether the menu item represents an object that no longer exists.",
                        "context": ["view", "edit", "embed"],
                        "type": "boolean",
                        "readonly": true
                    },
                    "menus": {
                        "description": "The terms assigned to the object in the nav_menu taxonomy.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            }
                        }
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/menu-items\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/menu-items\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-menus",
                    "title": "The current user can assign terms in the nav_menu taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/menu-items\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "menus": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-create-menus",
                    "title": "The current user can create terms in the nav_menu taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/menu-items\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "menus": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/menu-item-object",
                    "title": "Get linked object.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/menu-items\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "object": {
                                "type": "integer"
                            }
                        }
                    }
                }]
            },
            "nav_menu_item-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "nav_menu_item-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "GUID for the revision, as it exists in the database.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "id": {
                        "description": "Unique identifier for the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the revision unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The title for the object.",
                        "type": ["string", "object"],
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the object, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the object, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            }
                        }
                    },
                    "preview_link": {
                        "description": "Preview link for the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["edit"],
                        "readonly": true
                    }
                }
            },
            "oembed_cache": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "oembed_cache",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/oembed_cache\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/oembed_cache\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "oembed_cache-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "oembed_cache-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the revision unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            }
                        }
                    },
                    "preview_link": {
                        "description": "Preview link for the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["edit"],
                        "readonly": true
                    }
                }
            },
            "wp_block": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_block",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit"]
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit"]
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "excerpt": {
                        "description": "The excerpt for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Excerpt for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML excerpt for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the excerpt is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            },
                            "wp_pattern_sync_status": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": "",
                                "enum": ["partial", "unsynced"]
                            },
                            "footnotes": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": ""
                            }
                        }
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "wp_pattern_category": {
                        "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/blocks\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/blocks\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-assign-wp_pattern_category",
                    "title": "The current user can assign terms in the wp_pattern_category taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/blocks\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "wp_pattern_category": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-create-wp_pattern_category",
                    "title": "The current user can create terms in the wp_pattern_category taxonomy.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/blocks\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "wp_pattern_category": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }]
            },
            "wp_block-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_block-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the revision unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit"]
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit"]
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "excerpt": {
                        "description": "The excerpt for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Excerpt for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML excerpt for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the excerpt is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            },
                            "wp_pattern_sync_status": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": "",
                                "enum": ["partial", "unsynced"]
                            },
                            "footnotes": {
                                "type": "string",
                                "title": "",
                                "description": "",
                                "default": ""
                            }
                        }
                    },
                    "preview_link": {
                        "description": "Preview link for the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["edit"],
                        "readonly": true
                    }
                }
            },
            "wp_template": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_template",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "ID of template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "Unique slug identifying the template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "required": true,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_\\%-]+"
                    },
                    "theme": {
                        "description": "Theme identifier for the template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "type": {
                        "description": "Type of template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "source": {
                        "description": "Source of template",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "origin": {
                        "description": "Source of a customized template",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "content": {
                        "description": "Content of template.",
                        "type": ["object", "string"],
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the template, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit"]
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the template.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            }
                        }
                    },
                    "title": {
                        "description": "Title of template.",
                        "type": ["object", "string"],
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Title for the template, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML title for the template, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "description": {
                        "description": "Description of template.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"]
                    },
                    "status": {
                        "description": "Status of template.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "default": "publish",
                        "context": ["embed", "view", "edit"]
                    },
                    "wp_id": {
                        "description": "Post ID.",
                        "type": "integer",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "has_theme_file": {
                        "description": "Theme file exists.",
                        "type": "bool",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "author": {
                        "description": "The ID for the author of the template.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the template was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "author_text": {
                        "type": "string",
                        "description": "Human readable text for the author.",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "original_source": {
                        "description": "Where the template originally comes from e.g. 'theme'",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"],
                        "enum": ["theme", "plugin", "site", "user"]
                    },
                    "is_custom": {
                        "description": "Whether a template is a custom template.",
                        "type": "bool",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "plugin": {
                        "type": "string",
                        "description": "Plugin that registered the template.",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_template_part": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_template_part",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "ID of template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "Unique slug identifying the template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "required": true,
                        "minLength": 1,
                        "pattern": "[a-zA-Z0-9_\\%-]+"
                    },
                    "theme": {
                        "description": "Theme identifier for the template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "type": {
                        "description": "Type of template.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "source": {
                        "description": "Source of template",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "origin": {
                        "description": "Source of a customized template",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "content": {
                        "description": "Content of template.",
                        "type": ["object", "string"],
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Content for the template, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit"]
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the template.",
                                "type": "integer",
                                "context": ["edit"],
                                "readonly": true
                            }
                        }
                    },
                    "title": {
                        "description": "Title of template.",
                        "type": ["object", "string"],
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Title for the template, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML title for the template, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "description": {
                        "description": "Description of template.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"]
                    },
                    "status": {
                        "description": "Status of template.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "default": "publish",
                        "context": ["embed", "view", "edit"]
                    },
                    "wp_id": {
                        "description": "Post ID.",
                        "type": "integer",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "has_theme_file": {
                        "description": "Theme file exists.",
                        "type": "bool",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "author": {
                        "description": "The ID for the author of the template.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the template was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "author_text": {
                        "type": "string",
                        "description": "Human readable text for the author.",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "original_source": {
                        "description": "Where the template originally comes from e.g. 'theme'",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"],
                        "enum": ["theme", "plugin", "site", "user"]
                    },
                    "area": {
                        "description": "Where the template part is intended for use (header, footer, etc.)",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_global_styles-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_global_styles-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "id": {
                        "description": "ID of global styles config.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "styles": {
                        "description": "Global styles.",
                        "type": ["object"],
                        "context": ["view", "edit"]
                    },
                    "settings": {
                        "description": "Global settings.",
                        "type": ["object"],
                        "context": ["view", "edit"]
                    }
                }
            },
            "wp_global_styles": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_global_styles",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "ID of global styles config.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "styles": {
                        "description": "Global styles.",
                        "type": ["object"],
                        "context": ["view", "edit"]
                    },
                    "settings": {
                        "description": "Global settings.",
                        "type": ["object"],
                        "context": ["view", "edit"]
                    },
                    "title": {
                        "description": "Title of the global styles variation.",
                        "type": ["object", "string"],
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "Title for the global styles variation, as it exists in the database.",
                                "type": "string",
                                "context": ["view", "edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_navigation": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_navigation",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit", "embed"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/navigation\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/navigation\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "wp_navigation-revision": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_navigation-revision",
                "type": "object",
                "properties": {
                    "author": {
                        "description": "The ID for the author of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "date": {
                        "description": "The date the revision was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the revision was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "modified": {
                        "description": "The date the revision was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "modified_gmt": {
                        "description": "The date the revision was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the revision.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the revision unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "content": {
                        "description": "The content for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Content for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit", "embed"]
                            },
                            "rendered": {
                                "description": "HTML content for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            },
                            "block_version": {
                                "description": "Version of the content block format used by the post.",
                                "type": "integer",
                                "context": ["edit", "embed"],
                                "readonly": true
                            },
                            "protected": {
                                "description": "Whether the content is protected with a password.",
                                "type": "boolean",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "_acf_changed": {
                                "type": "boolean",
                                "title": "",
                                "description": "",
                                "default": false
                            }
                        }
                    },
                    "preview_link": {
                        "description": "Preview link for the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["edit"],
                        "readonly": true
                    }
                }
            },
            "wp_font_family": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_font_family",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "theme_json_version": {
                        "description": "Version of the theme.json schema used for the typography settings.",
                        "type": "integer",
                        "default": 3,
                        "minimum": 2,
                        "maximum": 3,
                        "context": ["view", "edit", "embed"]
                    },
                    "font_faces": {
                        "description": "The IDs of the child font faces in the font family.",
                        "type": "array",
                        "context": ["view", "edit", "embed"],
                        "items": {
                            "type": "integer"
                        }
                    },
                    "font_family_settings": {
                        "description": "font-face definition in theme.json format.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "name": {
                                "description": "Name of the font family preset, translatable.",
                                "type": "string"
                            },
                            "slug": {
                                "description": "Kebab-case unique identifier for the font family preset.",
                                "type": "string"
                            },
                            "fontFamily": {
                                "description": "CSS font-family value.",
                                "type": "string"
                            },
                            "preview": {
                                "description": "URL to a preview image of the font family.",
                                "type": "string",
                                "format": "uri",
                                "default": ""
                            }
                        },
                        "required": ["name", "slug", "fontFamily"],
                        "additionalProperties": false
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_font_face": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_font_face",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "theme_json_version": {
                        "description": "Version of the theme.json schema used for the typography settings.",
                        "type": "integer",
                        "default": 3,
                        "minimum": 2,
                        "maximum": 3,
                        "context": ["view", "edit", "embed"]
                    },
                    "parent": {
                        "description": "The ID for the parent font family of the font face.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "font_face_settings": {
                        "description": "font-face declaration in theme.json format.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "fontFamily": {
                                "description": "CSS font-family value.",
                                "type": "string",
                                "default": ""
                            },
                            "fontStyle": {
                                "description": "CSS font-style value.",
                                "type": "string",
                                "default": "normal"
                            },
                            "fontWeight": {
                                "description": "List of available font weights, separated by a space.",
                                "default": "400",
                                "type": ["string", "integer"]
                            },
                            "fontDisplay": {
                                "description": "CSS font-display value.",
                                "type": "string",
                                "default": "fallback",
                                "enum": ["auto", "block", "fallback", "swap", "optional"]
                            },
                            "src": {
                                "description": "Paths or URLs to the font files.",
                                "anyOf": [{
                                    "type": "string"
                                }, {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }],
                                "default": []
                            },
                            "fontStretch": {
                                "description": "CSS font-stretch value.",
                                "type": "string"
                            },
                            "ascentOverride": {
                                "description": "CSS ascent-override value.",
                                "type": "string"
                            },
                            "descentOverride": {
                                "description": "CSS descent-override value.",
                                "type": "string"
                            },
                            "fontVariant": {
                                "description": "CSS font-variant value.",
                                "type": "string"
                            },
                            "fontFeatureSettings": {
                                "description": "CSS font-feature-settings value.",
                                "type": "string"
                            },
                            "fontVariationSettings": {
                                "description": "CSS font-variation-settings value.",
                                "type": "string"
                            },
                            "lineGapOverride": {
                                "description": "CSS line-gap-override value.",
                                "type": "string"
                            },
                            "sizeAdjust": {
                                "description": "CSS size-adjust value.",
                                "type": "string"
                            },
                            "unicodeRange": {
                                "description": "CSS unicode-range value.",
                                "type": "string"
                            },
                            "preview": {
                                "description": "URL to a preview image of the font face.",
                                "type": "string",
                                "format": "uri",
                                "default": ""
                            }
                        },
                        "required": ["fontFamily", "src"],
                        "additionalProperties": false
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "acf-taxonomy": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "acf-taxonomy",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the post.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-taxonomy\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-taxonomy\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "acf-post-type": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "acf-post-type",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the post.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-post-type\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-post-type\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "acf-ui-options-page": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "acf-ui-options-page",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the post.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-ui-options-page\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-ui-options-page\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "acf-field-group": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "acf-field-group",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the post.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-field-group\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-field-group\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "acf-field": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "acf-field",
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The date the post was published, in the site's timezone.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the post was published, as GMT.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "guid": {
                        "description": "The globally unique identifier for the post.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "GUID for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"],
                                "readonly": true
                            },
                            "rendered": {
                                "description": "GUID for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit"],
                                "readonly": true
                            }
                        }
                    },
                    "id": {
                        "description": "Unique identifier for the post.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "link": {
                        "description": "URL to the post.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "modified": {
                        "description": "The date the post was last modified, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "modified_gmt": {
                        "description": "The date the post was last modified, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post unique to its type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "A named status for the post.",
                        "type": "string",
                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"],
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of post.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "password": {
                        "description": "A password to protect access to the content and excerpt.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "parent": {
                        "description": "The ID for the parent of the post.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "title": {
                        "description": "The title for the post.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Title for the post, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML title for the post, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "template": {
                        "description": "The theme file to use to display the post.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                },
                "links": [{
                    "rel": "https:\/\/api.w.org\/action-publish",
                    "title": "The current user can publish this post.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-field\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "enum": ["publish", "future"]
                            }
                        }
                    }
                }, {
                    "rel": "https:\/\/api.w.org\/action-unfiltered-html",
                    "title": "The current user can post unfiltered HTML markup and JavaScript.",
                    "href": "http:\/\/localhost:8000\/index.php?rest_route=\/wp\/v2\/acf-field\/{id}",
                    "targetSchema": {
                        "type": "object",
                        "properties": {
                            "content": {
                                "raw": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }]
            },
            "type": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "type",
                "type": "object",
                "properties": {
                    "capabilities": {
                        "description": "All capabilities used by the post type.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "A human-readable description of the post type.",
                        "type": "string",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "hierarchical": {
                        "description": "Whether or not the post type should have children.",
                        "type": "boolean",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "viewable": {
                        "description": "Whether or not the post type can be viewed.",
                        "type": "boolean",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "labels": {
                        "description": "Human-readable labels for the post type for various contexts.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "The title for the post type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the post type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "supports": {
                        "description": "All features, supported by the post type.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "has_archive": {
                        "description": "If the value is a string, the value will be used as the archive slug. If the value is false the post type has no archive.",
                        "type": ["string", "boolean"],
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "taxonomies": {
                        "description": "Taxonomies associated with post type.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "rest_base": {
                        "description": "REST base route for the post type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "rest_namespace": {
                        "description": "REST route's namespace for the post type.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "visibility": {
                        "description": "The visibility settings for the post type.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true,
                        "properties": {
                            "show_ui": {
                                "description": "Whether to generate a default UI for managing this post type.",
                                "type": "boolean"
                            },
                            "show_in_nav_menus": {
                                "description": "Whether to make the post type available for selection in navigation menus.",
                                "type": "boolean"
                            }
                        }
                    },
                    "icon": {
                        "description": "The icon for the post type.",
                        "type": ["string", "null"],
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "template": {
                        "type": ["array"],
                        "description": "The block template associated with the post type.",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "template_lock": {
                        "type": ["string", "boolean"],
                        "enum": ["all", "insert", "contentOnly", false],
                        "description": "The template_lock associated with the post type, or false if none.",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    }
                }
            },
            "status": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "status",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The title for the status.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "private": {
                        "description": "Whether posts with this status should be private.",
                        "type": "boolean",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "protected": {
                        "description": "Whether posts with this status should be protected.",
                        "type": "boolean",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "public": {
                        "description": "Whether posts of this status should be shown in the front end of the site.",
                        "type": "boolean",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "queryable": {
                        "description": "Whether posts with this status should be publicly-queryable.",
                        "type": "boolean",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "show_in_list": {
                        "description": "Whether to include posts in the edit listing for their post type.",
                        "type": "boolean",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the status.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "date_floating": {
                        "description": "Whether posts of this status may have floating published dates.",
                        "type": "boolean",
                        "context": ["view", "edit"],
                        "readonly": true
                    }
                }
            },
            "taxonomy": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "taxonomy",
                "type": "object",
                "properties": {
                    "capabilities": {
                        "description": "All capabilities used by the taxonomy.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "A human-readable description of the taxonomy.",
                        "type": "string",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "hierarchical": {
                        "description": "Whether or not the taxonomy should have children.",
                        "type": "boolean",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "labels": {
                        "description": "Human-readable labels for the taxonomy for various contexts.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "The title for the taxonomy.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the taxonomy.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "show_cloud": {
                        "description": "Whether or not the term cloud should be displayed.",
                        "type": "boolean",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "types": {
                        "description": "Types associated with the taxonomy.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "rest_base": {
                        "description": "REST base route for the taxonomy.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "rest_namespace": {
                        "description": "REST namespace route for the taxonomy.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "visibility": {
                        "description": "The visibility settings for the taxonomy.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true,
                        "properties": {
                            "public": {
                                "description": "Whether a taxonomy is intended for use publicly either via the admin interface or by front-end users.",
                                "type": "boolean"
                            },
                            "publicly_queryable": {
                                "description": "Whether the taxonomy is publicly queryable.",
                                "type": "boolean"
                            },
                            "show_ui": {
                                "description": "Whether to generate a default UI for managing this taxonomy.",
                                "type": "boolean"
                            },
                            "show_admin_column": {
                                "description": "Whether to allow automatic creation of taxonomy columns on associated post-types table.",
                                "type": "boolean"
                            },
                            "show_in_nav_menus": {
                                "description": "Whether to make the taxonomy available for selection in navigation menus.",
                                "type": "boolean"
                            },
                            "show_in_quick_edit": {
                                "description": "Whether to show the taxonomy in the quick\/bulk edit panel.",
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "category": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "category",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["category"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "parent": {
                        "description": "The parent term ID.",
                        "type": "integer",
                        "context": ["view", "edit"]
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "tag": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "tag",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["post_tag"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    }
                }
            },
            "nav_menu": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "nav_menu",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "locations": {
                        "description": "The locations assigned to the menu.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit"]
                    },
                    "auto_add": {
                        "description": "Whether to automatically add top level pages to this menu.",
                        "context": ["view", "edit"],
                        "type": "boolean"
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "link_category": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "link_category",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["link_category"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "post_format": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "post_format",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["post_format"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_theme": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_theme",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["wp_theme"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_template_part_area": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_template_part_area",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["wp_template_part_area"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "wp_pattern_category": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp_pattern_category",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the term.",
                        "type": "integer",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "count": {
                        "description": "Number of published posts for the term.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "HTML description of the term.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL of the term.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "HTML title for the term.",
                        "type": "string",
                        "context": ["view", "embed", "edit"],
                        "required": true
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the term unique to its type.",
                        "type": "string",
                        "context": ["view", "embed", "edit"]
                    },
                    "taxonomy": {
                        "description": "Type attribution for the term.",
                        "type": "string",
                        "enum": ["wp_pattern_category"],
                        "context": ["view", "embed", "edit"],
                        "readonly": true
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "user": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "user",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the user.",
                        "type": "integer",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "username": {
                        "description": "Login name for the user.",
                        "type": "string",
                        "context": ["edit"],
                        "required": true
                    },
                    "name": {
                        "description": "Display name for the user.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "first_name": {
                        "description": "First name for the user.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "last_name": {
                        "description": "Last name for the user.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "email": {
                        "description": "The email address for the user.",
                        "type": "string",
                        "format": "email",
                        "context": ["edit"],
                        "required": true
                    },
                    "url": {
                        "description": "URL of the user.",
                        "type": "string",
                        "format": "uri",
                        "context": ["embed", "view", "edit"]
                    },
                    "description": {
                        "description": "Description of the user.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "link": {
                        "description": "Author URL of the user.",
                        "type": "string",
                        "format": "uri",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "locale": {
                        "description": "Locale for the user.",
                        "type": "string",
                        "enum": ["", "en_US"],
                        "context": ["edit"]
                    },
                    "nickname": {
                        "description": "The nickname for the user.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "slug": {
                        "description": "An alphanumeric identifier for the user.",
                        "type": "string",
                        "context": ["embed", "view", "edit"]
                    },
                    "registered_date": {
                        "description": "Registration date for the user.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "roles": {
                        "description": "Roles assigned to the user.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "context": ["edit"]
                    },
                    "password": {
                        "description": "Password for the user (never included).",
                        "type": "string",
                        "context": [],
                        "required": true
                    },
                    "capabilities": {
                        "description": "All capabilities assigned to the user.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "extra_capabilities": {
                        "description": "Any extra capabilities assigned to the user.",
                        "type": "object",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "avatar_urls": {
                        "description": "Avatar URLs for the user.",
                        "type": "object",
                        "context": ["embed", "view", "edit"],
                        "readonly": true,
                        "properties": {
                            "24": {
                                "description": "Avatar URL with image size of 24 pixels.",
                                "type": "string",
                                "format": "uri",
                                "context": ["embed", "view", "edit"]
                            },
                            "48": {
                                "description": "Avatar URL with image size of 48 pixels.",
                                "type": "string",
                                "format": "uri",
                                "context": ["embed", "view", "edit"]
                            },
                            "96": {
                                "description": "Avatar URL with image size of 96 pixels.",
                                "type": "string",
                                "format": "uri",
                                "context": ["embed", "view", "edit"]
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": {
                            "persisted_preferences": {
                                "type": "object",
                                "title": "",
                                "description": "",
                                "default": [],
                                "context": ["edit"],
                                "properties": {
                                    "_modified": {
                                        "description": "The date and time the preferences were updated.",
                                        "type": "string",
                                        "format": "date-time",
                                        "readonly": false
                                    }
                                },
                                "additionalProperties": true
                            }
                        }
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "application-password": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "application-password",
                "type": "object",
                "properties": {
                    "uuid": {
                        "description": "The unique identifier for the application password.",
                        "type": "string",
                        "format": "uuid",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "app_id": {
                        "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                        "type": "string",
                        "format": "uuid",
                        "context": ["view", "edit", "embed"]
                    },
                    "name": {
                        "description": "The name of the application password.",
                        "type": "string",
                        "required": true,
                        "context": ["view", "edit", "embed"],
                        "minLength": 1,
                        "pattern": ".*\\S.*"
                    },
                    "password": {
                        "description": "The generated password. Only available after adding an application.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "created": {
                        "description": "The GMT date the application password was created.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "last_used": {
                        "description": "The GMT date the application password was last used.",
                        "type": ["string", "null"],
                        "format": "date-time",
                        "context": ["view", "edit"],
                        "readonly": true
                    },
                    "last_ip": {
                        "description": "The IP address the application password was last used by.",
                        "type": ["string", "null"],
                        "format": "ip",
                        "context": ["view", "edit"],
                        "readonly": true
                    }
                }
            },
            "comment": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "comment",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the comment.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "author": {
                        "description": "The ID of the user object, if author was a user.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "author_email": {
                        "description": "Email address for the comment author.",
                        "type": "string",
                        "format": "email",
                        "context": ["edit"]
                    },
                    "author_ip": {
                        "description": "IP address for the comment author.",
                        "type": "string",
                        "format": "ip",
                        "context": ["edit"]
                    },
                    "author_name": {
                        "description": "Display name for the comment author.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "author_url": {
                        "description": "URL for the comment author.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"]
                    },
                    "author_user_agent": {
                        "description": "User agent for the comment author.",
                        "type": "string",
                        "context": ["edit"]
                    },
                    "content": {
                        "description": "The content for the comment.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "properties": {
                            "raw": {
                                "description": "Content for the comment, as it exists in the database.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "rendered": {
                                "description": "HTML content for the comment, transformed for display.",
                                "type": "string",
                                "context": ["view", "edit", "embed"],
                                "readonly": true
                            }
                        }
                    },
                    "date": {
                        "description": "The date the comment was published, in the site's timezone.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit", "embed"]
                    },
                    "date_gmt": {
                        "description": "The date the comment was published, as GMT.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view", "edit"]
                    },
                    "link": {
                        "description": "URL to the comment.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "parent": {
                        "description": "The ID for the parent of the comment.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "default": 0
                    },
                    "post": {
                        "description": "The ID of the associated post object.",
                        "type": "integer",
                        "context": ["view", "edit"],
                        "default": 0
                    },
                    "status": {
                        "description": "State of the comment.",
                        "type": "string",
                        "context": ["view", "edit"]
                    },
                    "type": {
                        "description": "Type of the comment.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "author_avatar_urls": {
                        "description": "Avatar URLs for the comment author.",
                        "type": "object",
                        "context": ["view", "edit", "embed"],
                        "readonly": true,
                        "properties": {
                            "24": {
                                "description": "Avatar URL with image size of 24 pixels.",
                                "type": "string",
                                "format": "uri",
                                "context": ["embed", "view", "edit"]
                            },
                            "48": {
                                "description": "Avatar URL with image size of 48 pixels.",
                                "type": "string",
                                "format": "uri",
                                "context": ["embed", "view", "edit"]
                            },
                            "96": {
                                "description": "Avatar URL with image size of 96 pixels.",
                                "type": "string",
                                "format": "uri",
                                "context": ["embed", "view", "edit"]
                            }
                        }
                    },
                    "meta": {
                        "description": "Meta fields.",
                        "type": "object",
                        "context": ["view", "edit"],
                        "properties": []
                    },
                    "acf": {
                        "description": "Expose advanced custom fields.",
                        "type": "object"
                    }
                }
            },
            "search-result": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "search-result",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the object.",
                        "type": ["integer", "string"],
                        "context": ["view", "embed"],
                        "readonly": true
                    },
                    "title": {
                        "description": "The title for the object.",
                        "type": "string",
                        "context": ["view", "embed"],
                        "readonly": true
                    },
                    "url": {
                        "description": "URL to the object.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view", "embed"],
                        "readonly": true
                    },
                    "type": {
                        "description": "Object type.",
                        "type": "string",
                        "enum": ["post", "term", "post-format"],
                        "context": ["view", "embed"],
                        "readonly": true
                    },
                    "subtype": {
                        "description": "Object subtype.",
                        "type": "string",
                        "enum": ["post", "page", "category", "post_tag", "post_format"],
                        "context": ["view", "embed"],
                        "readonly": true
                    }
                }
            },
            "rendered-block": {
                "$schema": "http:\/\/json-schema.org\/schema#",
                "title": "rendered-block",
                "type": "object",
                "properties": {
                    "rendered": {
                        "description": "The rendered block.",
                        "type": "string",
                        "required": true,
                        "context": ["edit"]
                    }
                }
            },
            "block-type": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "block-type",
                "type": "object",
                "properties": {
                    "api_version": {
                        "description": "Version of block API.",
                        "type": "integer",
                        "default": 1,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "title": {
                        "description": "Title of block type.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "Unique name identifying the block type.",
                        "type": "string",
                        "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$",
                        "required": true,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "Description of block type.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "icon": {
                        "description": "Icon of block type.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "attributes": {
                        "description": "Block attributes.",
                        "type": ["object", "null"],
                        "properties": [],
                        "default": null,
                        "additionalProperties": {
                            "type": "object"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "provides_context": {
                        "description": "Context provided by blocks of this type.",
                        "type": "object",
                        "properties": [],
                        "additionalProperties": {
                            "type": "string"
                        },
                        "default": [],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "uses_context": {
                        "description": "Context values inherited by blocks of this type.",
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "selectors": {
                        "description": "Custom CSS selectors.",
                        "type": "object",
                        "default": [],
                        "properties": [],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "supports": {
                        "description": "Block supports.",
                        "type": "object",
                        "default": [],
                        "properties": [],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "category": {
                        "description": "Block category.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "is_dynamic": {
                        "description": "Is the block dynamically rendered.",
                        "type": "boolean",
                        "default": false,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "editor_script_handles": {
                        "description": "Editor script handles.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "script_handles": {
                        "description": "Public facing and editor script handles.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "view_script_handles": {
                        "description": "Public facing script handles.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "view_script_module_ids": {
                        "description": "Public facing script module IDs.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "editor_style_handles": {
                        "description": "Editor style handles.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "style_handles": {
                        "description": "Public facing and editor style handles.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "view_style_handles": {
                        "description": "Public facing style handles.",
                        "type": ["array"],
                        "default": [],
                        "items": {
                            "type": "string"
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "styles": {
                        "description": "Block style variations.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "Unique name identifying the style.",
                                    "type": "string",
                                    "required": true
                                },
                                "label": {
                                    "description": "The human-readable label for the style.",
                                    "type": "string"
                                },
                                "inline_style": {
                                    "description": "Inline CSS code that registers the CSS class required for the style.",
                                    "type": "string"
                                },
                                "style_handle": {
                                    "description": "Contains the handle that defines the block style.",
                                    "type": "string"
                                }
                            }
                        },
                        "default": [],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "variations": {
                        "description": "Block variations.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "description": "The unique and machine-readable name.",
                                    "type": "string",
                                    "required": true
                                },
                                "title": {
                                    "description": "A human-readable variation title.",
                                    "type": "string",
                                    "required": true
                                },
                                "description": {
                                    "description": "A detailed variation description.",
                                    "type": "string",
                                    "required": false
                                },
                                "category": {
                                    "description": "Block category.",
                                    "type": ["string", "null"],
                                    "default": null,
                                    "context": ["embed", "view", "edit"],
                                    "readonly": true
                                },
                                "icon": {
                                    "description": "Icon of block type.",
                                    "type": ["string", "null"],
                                    "default": null,
                                    "context": ["embed", "view", "edit"],
                                    "readonly": true
                                },
                                "isDefault": {
                                    "description": "Indicates whether the current variation is the default one.",
                                    "type": "boolean",
                                    "required": false,
                                    "default": false
                                },
                                "attributes": {
                                    "description": "The initial values for attributes.",
                                    "type": "object"
                                },
                                "innerBlocks": {
                                    "description": "The list of inner blocks used in the example.",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "description": "The name of the inner block.",
                                                "type": "string",
                                                "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$",
                                                "required": true
                                            },
                                            "attributes": {
                                                "description": "The attributes of the inner block.",
                                                "type": "object"
                                            },
                                            "innerBlocks": {
                                                "description": "A list of the inner block's own inner blocks. This is a recursive definition following the parent innerBlocks schema.",
                                                "type": "array"
                                            }
                                        }
                                    }
                                },
                                "example": {
                                    "description": "Block example.",
                                    "type": ["object", "null"],
                                    "default": null,
                                    "properties": {
                                        "attributes": {
                                            "description": "The attributes used in the example.",
                                            "type": "object"
                                        },
                                        "innerBlocks": {
                                            "description": "The list of inner blocks used in the example.",
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "description": "The name of the inner block.",
                                                        "type": "string",
                                                        "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$",
                                                        "required": true
                                                    },
                                                    "attributes": {
                                                        "description": "The attributes of the inner block.",
                                                        "type": "object"
                                                    },
                                                    "innerBlocks": {
                                                        "description": "A list of the inner block's own inner blocks. This is a recursive definition following the parent innerBlocks schema.",
                                                        "type": "array"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "context": ["embed", "view", "edit"],
                                    "readonly": true
                                },
                                "scope": {
                                    "description": "The list of scopes where the variation is applicable. When not provided, it assumes all available scopes.",
                                    "type": ["array", "null"],
                                    "default": null,
                                    "items": {
                                        "type": "string",
                                        "enum": ["block", "inserter", "transform"]
                                    },
                                    "readonly": true
                                },
                                "keywords": {
                                    "description": "Block keywords.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": [],
                                    "context": ["embed", "view", "edit"],
                                    "readonly": true
                                }
                            }
                        },
                        "readonly": true,
                        "context": ["embed", "view", "edit"],
                        "default": null
                    },
                    "textdomain": {
                        "description": "Public text domain.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "parent": {
                        "description": "Parent blocks.",
                        "type": ["array", "null"],
                        "items": {
                            "type": "string",
                            "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$"
                        },
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "ancestor": {
                        "description": "Ancestor blocks.",
                        "type": ["array", "null"],
                        "items": {
                            "type": "string",
                            "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$"
                        },
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "allowed_blocks": {
                        "description": "Allowed child block types.",
                        "type": ["array", "null"],
                        "items": {
                            "type": "string",
                            "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$"
                        },
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "keywords": {
                        "description": "Block keywords.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": [],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "example": {
                        "description": "Block example.",
                        "type": ["object", "null"],
                        "default": null,
                        "properties": {
                            "attributes": {
                                "description": "The attributes used in the example.",
                                "type": "object"
                            },
                            "innerBlocks": {
                                "description": "The list of inner blocks used in the example.",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "description": "The name of the inner block.",
                                            "type": "string",
                                            "pattern": "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$",
                                            "required": true
                                        },
                                        "attributes": {
                                            "description": "The attributes of the inner block.",
                                            "type": "object"
                                        },
                                        "innerBlocks": {
                                            "description": "A list of the inner block's own inner blocks. This is a recursive definition following the parent innerBlocks schema.",
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "block_hooks": {
                        "description": "This block is automatically inserted near any occurrence of the block types used as keys of this map, into a relative position given by the corresponding value.",
                        "type": "object",
                        "patternProperties": {
                            "^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$": {
                                "type": "string",
                                "enum": ["before", "after", "first_child", "last_child"]
                            }
                        },
                        "default": [],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "editor_script": {
                        "description": "Editor script handle. DEPRECATED: Use `editor_script_handles` instead.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "script": {
                        "description": "Public facing and editor script handle. DEPRECATED: Use `script_handles` instead.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "view_script": {
                        "description": "Public facing script handle. DEPRECATED: Use `view_script_handles` instead.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "editor_style": {
                        "description": "Editor style handle. DEPRECATED: Use `editor_style_handles` instead.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "style": {
                        "description": "Public facing and editor style handle. DEPRECATED: Use `style_handles` instead.",
                        "type": ["string", "null"],
                        "default": null,
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    }
                }
            },
            "settings": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "settings",
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "Site title.",
                        "default": null
                    },
                    "description": {
                        "type": "string",
                        "title": "Tagline",
                        "description": "Site tagline.",
                        "default": null
                    },
                    "url": {
                        "type": "string",
                        "title": "",
                        "description": "Site URL.",
                        "default": null,
                        "format": "uri"
                    },
                    "email": {
                        "type": "string",
                        "title": "",
                        "description": "This address is used for admin purposes, like new user notification.",
                        "default": null,
                        "format": "email"
                    },
                    "timezone": {
                        "type": "string",
                        "title": "",
                        "description": "A city in the same timezone as you.",
                        "default": null
                    },
                    "date_format": {
                        "type": "string",
                        "title": "",
                        "description": "A date format for all date strings.",
                        "default": null
                    },
                    "time_format": {
                        "type": "string",
                        "title": "",
                        "description": "A time format for all time strings.",
                        "default": null
                    },
                    "start_of_week": {
                        "type": "integer",
                        "title": "",
                        "description": "A day number of the week that the week should start on.",
                        "default": null
                    },
                    "language": {
                        "type": "string",
                        "title": "",
                        "description": "WordPress locale code.",
                        "default": "en_US"
                    },
                    "use_smilies": {
                        "type": "boolean",
                        "title": "",
                        "description": "Convert emoticons like :-) and :-P to graphics on display.",
                        "default": true
                    },
                    "default_category": {
                        "type": "integer",
                        "title": "",
                        "description": "Default post category.",
                        "default": null
                    },
                    "default_post_format": {
                        "type": "string",
                        "title": "",
                        "description": "Default post format.",
                        "default": null
                    },
                    "posts_per_page": {
                        "type": "integer",
                        "title": "Maximum posts per page",
                        "description": "Blog pages show at most.",
                        "default": 10
                    },
                    "show_on_front": {
                        "type": "string",
                        "title": "Show on front",
                        "description": "What to show on the front page",
                        "default": null
                    },
                    "page_on_front": {
                        "type": "integer",
                        "title": "Page on front",
                        "description": "The ID of the page that should be displayed on the front page",
                        "default": null
                    },
                    "page_for_posts": {
                        "type": "integer",
                        "title": "",
                        "description": "The ID of the page that should display the latest posts",
                        "default": null
                    },
                    "default_ping_status": {
                        "type": "string",
                        "title": "",
                        "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
                        "default": null,
                        "enum": ["open", "closed"]
                    },
                    "default_comment_status": {
                        "type": "string",
                        "title": "Allow comments on new posts",
                        "description": "Allow people to submit comments on new posts.",
                        "default": null,
                        "enum": ["open", "closed"]
                    },
                    "site_logo": {
                        "type": "integer",
                        "title": "Logo",
                        "description": "Site logo.",
                        "default": null
                    },
                    "site_icon": {
                        "type": "integer",
                        "title": "Icon",
                        "description": "Site icon.",
                        "default": null
                    }
                }
            },
            "theme": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "theme",
                "type": "object",
                "properties": {
                    "stylesheet": {
                        "description": "The theme's stylesheet. This uniquely identifies the theme.",
                        "type": "string",
                        "readonly": true
                    },
                    "stylesheet_uri": {
                        "description": "The uri for the theme's stylesheet directory.",
                        "type": "string",
                        "format": "uri",
                        "readonly": true
                    },
                    "template": {
                        "description": "The theme's template. If this is a child theme, this refers to the parent theme, otherwise this is the same as the theme's stylesheet.",
                        "type": "string",
                        "readonly": true
                    },
                    "template_uri": {
                        "description": "The uri for the theme's template directory. If this is a child theme, this refers to the parent theme, otherwise this is the same as the theme's stylesheet directory.",
                        "type": "string",
                        "format": "uri",
                        "readonly": true
                    },
                    "author": {
                        "description": "The theme author.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "The theme author's name, as found in the theme header.",
                                "type": "string"
                            },
                            "rendered": {
                                "description": "HTML for the theme author, transformed for display.",
                                "type": "string"
                            }
                        }
                    },
                    "author_uri": {
                        "description": "The website of the theme author.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "The website of the theme author, as found in the theme header.",
                                "type": "string",
                                "format": "uri"
                            },
                            "rendered": {
                                "description": "The website of the theme author, transformed for display.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "description": {
                        "description": "A description of the theme.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "The theme description, as found in the theme header.",
                                "type": "string"
                            },
                            "rendered": {
                                "description": "The theme description, transformed for display.",
                                "type": "string"
                            }
                        }
                    },
                    "is_block_theme": {
                        "description": "Whether the theme is a block-based theme.",
                        "type": "boolean",
                        "readonly": true
                    },
                    "name": {
                        "description": "The name of the theme.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "The theme name, as found in the theme header.",
                                "type": "string"
                            },
                            "rendered": {
                                "description": "The theme name, transformed for display.",
                                "type": "string"
                            }
                        }
                    },
                    "requires_php": {
                        "description": "The minimum PHP version required for the theme to work.",
                        "type": "string",
                        "readonly": true
                    },
                    "requires_wp": {
                        "description": "The minimum WordPress version required for the theme to work.",
                        "type": "string",
                        "readonly": true
                    },
                    "screenshot": {
                        "description": "The theme's screenshot URL.",
                        "type": "string",
                        "format": "uri",
                        "readonly": true
                    },
                    "tags": {
                        "description": "Tags indicating styles and features of the theme.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "The theme tags, as found in the theme header.",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "rendered": {
                                "description": "The theme tags, transformed for display.",
                                "type": "string"
                            }
                        }
                    },
                    "textdomain": {
                        "description": "The theme's text domain.",
                        "type": "string",
                        "readonly": true
                    },
                    "theme_supports": {
                        "description": "Features supported by this theme.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "align-wide": {
                                "description": "Whether theme opts in to wide alignment CSS class.",
                                "type": "boolean",
                                "default": false
                            },
                            "automatic-feed-links": {
                                "description": "Whether posts and comments RSS feed links are added to head.",
                                "type": "boolean",
                                "default": false
                            },
                            "block-templates": {
                                "description": "Whether a theme uses block-based templates.",
                                "type": "boolean",
                                "default": false
                            },
                            "block-template-parts": {
                                "description": "Whether a theme uses block-based template parts.",
                                "type": "boolean",
                                "default": false
                            },
                            "custom-background": {
                                "description": "Custom background if defined by the theme.",
                                "type": ["boolean", "object"],
                                "default": false,
                                "properties": {
                                    "default-image": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "default-preset": {
                                        "type": "string",
                                        "enum": ["default", "fill", "fit", "repeat", "custom"]
                                    },
                                    "default-position-x": {
                                        "type": "string",
                                        "enum": ["left", "center", "right"]
                                    },
                                    "default-position-y": {
                                        "type": "string",
                                        "enum": ["left", "center", "right"]
                                    },
                                    "default-size": {
                                        "type": "string",
                                        "enum": ["auto", "contain", "cover"]
                                    },
                                    "default-repeat": {
                                        "type": "string",
                                        "enum": ["repeat-x", "repeat-y", "repeat", "no-repeat"]
                                    },
                                    "default-attachment": {
                                        "type": "string",
                                        "enum": ["scroll", "fixed"]
                                    },
                                    "default-color": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "custom-header": {
                                "description": "Custom header if defined by the theme.",
                                "type": ["boolean", "object"],
                                "default": false,
                                "properties": {
                                    "default-image": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "random-default": {
                                        "type": "boolean"
                                    },
                                    "width": {
                                        "type": "integer"
                                    },
                                    "height": {
                                        "type": "integer"
                                    },
                                    "flex-height": {
                                        "type": "boolean"
                                    },
                                    "flex-width": {
                                        "type": "boolean"
                                    },
                                    "default-text-color": {
                                        "type": "string"
                                    },
                                    "header-text": {
                                        "type": "boolean"
                                    },
                                    "uploads": {
                                        "type": "boolean"
                                    },
                                    "video": {
                                        "type": "boolean"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "custom-logo": {
                                "description": "Custom logo if defined by the theme.",
                                "type": ["boolean", "object"],
                                "default": false,
                                "properties": {
                                    "width": {
                                        "type": "integer"
                                    },
                                    "height": {
                                        "type": "integer"
                                    },
                                    "flex-width": {
                                        "type": "boolean"
                                    },
                                    "flex-height": {
                                        "type": "boolean"
                                    },
                                    "header-text": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "unlink-homepage-logo": {
                                        "type": "boolean"
                                    }
                                },
                                "additionalProperties": false
                            },
                            "customize-selective-refresh-widgets": {
                                "description": "Whether the theme enables Selective Refresh for Widgets being managed with the Customizer.",
                                "type": "boolean",
                                "default": false
                            },
                            "dark-editor-style": {
                                "description": "Whether theme opts in to the dark editor style UI.",
                                "type": "boolean",
                                "default": false
                            },
                            "disable-custom-colors": {
                                "description": "Whether the theme disables custom colors.",
                                "type": "boolean",
                                "default": false
                            },
                            "disable-custom-font-sizes": {
                                "description": "Whether the theme disables custom font sizes.",
                                "type": "boolean",
                                "default": false
                            },
                            "disable-custom-gradients": {
                                "description": "Whether the theme disables custom gradients.",
                                "type": "boolean",
                                "default": false
                            },
                            "disable-layout-styles": {
                                "description": "Whether the theme disables generated layout styles.",
                                "type": "boolean",
                                "default": false
                            },
                            "editor-color-palette": {
                                "description": "Custom color palette if defined by the theme.",
                                "type": ["boolean", "array"],
                                "default": false,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        },
                                        "color": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "editor-font-sizes": {
                                "description": "Custom font sizes if defined by the theme.",
                                "type": ["boolean", "array"],
                                "default": false,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "number"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "editor-gradient-presets": {
                                "description": "Custom gradient presets if defined by the theme.",
                                "type": ["boolean", "array"],
                                "default": false,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "gradient": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "editor-spacing-sizes": {
                                "description": "Custom spacing sizes if defined by the theme.",
                                "type": ["boolean", "array"],
                                "default": false,
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            },
                            "editor-styles": {
                                "description": "Whether theme opts in to the editor styles CSS wrapper.",
                                "type": "boolean",
                                "default": false
                            },
                            "html5": {
                                "description": "Allows use of HTML5 markup for search forms, comment forms, comment lists, gallery, and caption.",
                                "type": ["boolean", "array"],
                                "default": false,
                                "items": {
                                    "type": "string",
                                    "enum": ["search-form", "comment-form", "comment-list", "gallery", "caption", "script", "style"]
                                }
                            },
                            "formats": {
                                "description": "Post formats supported.",
                                "type": "array",
                                "default": ["standard"],
                                "items": {
                                    "type": "string",
                                    "enum": {
                                        "standard": "standard",
                                        "aside": "aside",
                                        "chat": "chat",
                                        "gallery": "gallery",
                                        "link": "link",
                                        "image": "image",
                                        "quote": "quote",
                                        "status": "status",
                                        "video": "video",
                                        "audio": "audio"
                                    }
                                }
                            },
                            "post-thumbnails": {
                                "description": "The post types that support thumbnails or true if all post types are supported.",
                                "type": ["boolean", "array"],
                                "default": false,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "responsive-embeds": {
                                "description": "Whether the theme supports responsive embedded content.",
                                "type": "boolean",
                                "default": false
                            },
                            "title-tag": {
                                "description": "Whether the theme can manage the document title tag.",
                                "type": "boolean",
                                "default": false
                            },
                            "wp-block-styles": {
                                "description": "Whether theme opts in to default WordPress block styles for viewing.",
                                "type": "boolean",
                                "default": false
                            }
                        }
                    },
                    "theme_uri": {
                        "description": "The URI of the theme's webpage.",
                        "type": "object",
                        "readonly": true,
                        "properties": {
                            "raw": {
                                "description": "The URI of the theme's webpage, as found in the theme header.",
                                "type": "string",
                                "format": "uri"
                            },
                            "rendered": {
                                "description": "The URI of the theme's webpage, transformed for display.",
                                "type": "string",
                                "format": "uri"
                            }
                        }
                    },
                    "version": {
                        "description": "The theme's current version.",
                        "type": "string",
                        "readonly": true
                    },
                    "status": {
                        "description": "A named status for the theme.",
                        "type": "string",
                        "enum": ["inactive", "active"]
                    }
                }
            },
            "plugin": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "plugin",
                "type": "object",
                "properties": {
                    "plugin": {
                        "description": "The plugin file.",
                        "type": "string",
                        "pattern": "[^.\\\/]+(?:\\\/[^.\\\/]+)?",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "status": {
                        "description": "The plugin activation status.",
                        "type": "string",
                        "enum": ["inactive", "active"],
                        "context": ["view", "edit", "embed"]
                    },
                    "name": {
                        "description": "The plugin name.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "plugin_uri": {
                        "description": "The plugin's website address.",
                        "type": "string",
                        "format": "uri",
                        "readonly": true,
                        "context": ["view", "edit"]
                    },
                    "author": {
                        "description": "The plugin author.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit"]
                    },
                    "author_uri": {
                        "description": "Plugin author's website address.",
                        "type": "string",
                        "format": "uri",
                        "readonly": true,
                        "context": ["view", "edit"]
                    },
                    "description": {
                        "description": "The plugin description.",
                        "type": "object",
                        "readonly": true,
                        "context": ["view", "edit"],
                        "properties": {
                            "raw": {
                                "description": "The raw plugin description.",
                                "type": "string"
                            },
                            "rendered": {
                                "description": "The plugin description formatted for display.",
                                "type": "string"
                            }
                        }
                    },
                    "version": {
                        "description": "The plugin version number.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit"]
                    },
                    "network_only": {
                        "description": "Whether the plugin can only be activated network-wide.",
                        "type": "boolean",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "requires_wp": {
                        "description": "Minimum required version of WordPress.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "requires_php": {
                        "description": "Minimum required version of PHP.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "textdomain": {
                        "description": "The plugin's text domain.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit"]
                    }
                }
            },
            "sidebar": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "sidebar",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "ID of sidebar.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "Unique name identifying the sidebar.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "Description of sidebar.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "class": {
                        "description": "Extra CSS class to assign to the sidebar in the Widgets interface.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "before_widget": {
                        "description": "HTML content to prepend to each widget's HTML output when assigned to this sidebar. Default is an opening list item element.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "after_widget": {
                        "description": "HTML content to append to each widget's HTML output when assigned to this sidebar. Default is a closing list item element.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "before_title": {
                        "description": "HTML content to prepend to the sidebar title when displayed. Default is an opening h2 element.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "after_title": {
                        "description": "HTML content to append to the sidebar title when displayed. Default is a closing h2 element.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "status": {
                        "description": "Status of sidebar.",
                        "type": "string",
                        "enum": ["active", "inactive"],
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "widgets": {
                        "description": "Nested widgets.",
                        "type": "array",
                        "items": {
                            "type": ["object", "string"]
                        },
                        "default": [],
                        "context": ["embed", "view", "edit"]
                    }
                }
            },
            "widget-type": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "widget-type",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique slug identifying the widget type.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "name": {
                        "description": "Human-readable name identifying the widget type.",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "Description of the widget.",
                        "type": "string",
                        "default": "",
                        "context": ["view", "edit", "embed"]
                    },
                    "is_multi": {
                        "description": "Whether the widget supports multiple instances",
                        "type": "boolean",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "classname": {
                        "description": "Class name",
                        "type": "string",
                        "default": "",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    }
                }
            },
            "widget": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "widget",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the widget.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "id_base": {
                        "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "sidebar": {
                        "description": "The sidebar the widget belongs to.",
                        "type": "string",
                        "default": "wp_inactive_widgets",
                        "required": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "rendered": {
                        "description": "HTML representation of the widget.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "rendered_form": {
                        "description": "HTML representation of the widget admin form.",
                        "type": "string",
                        "context": ["edit"],
                        "readonly": true
                    },
                    "instance": {
                        "description": "Instance settings of the widget, if supported.",
                        "type": "object",
                        "context": ["edit"],
                        "default": null,
                        "properties": {
                            "encoded": {
                                "description": "Base64 encoded representation of the instance settings.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "hash": {
                                "description": "Cryptographic hash of the instance settings.",
                                "type": "string",
                                "context": ["edit"]
                            },
                            "raw": {
                                "description": "Unencoded instance settings, if supported.",
                                "type": "object",
                                "context": ["edit"]
                            }
                        }
                    },
                    "form_data": {
                        "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                        "type": "string",
                        "context": []
                    }
                }
            },
            "block-directory-item": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "block-directory-item",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The block name, in namespace\/block-name format.",
                        "type": "string",
                        "context": ["view"]
                    },
                    "title": {
                        "description": "The block title, in human readable format.",
                        "type": "string",
                        "context": ["view"]
                    },
                    "description": {
                        "description": "A short description of the block, in human readable format.",
                        "type": "string",
                        "context": ["view"]
                    },
                    "id": {
                        "description": "The block slug.",
                        "type": "string",
                        "context": ["view"]
                    },
                    "rating": {
                        "description": "The star rating of the block.",
                        "type": "number",
                        "context": ["view"]
                    },
                    "rating_count": {
                        "description": "The number of ratings.",
                        "type": "integer",
                        "context": ["view"]
                    },
                    "active_installs": {
                        "description": "The number sites that have activated this block.",
                        "type": "integer",
                        "context": ["view"]
                    },
                    "author_block_rating": {
                        "description": "The average rating of blocks published by the same author.",
                        "type": "number",
                        "context": ["view"]
                    },
                    "author_block_count": {
                        "description": "The number of blocks published by the same author.",
                        "type": "integer",
                        "context": ["view"]
                    },
                    "author": {
                        "description": "The WordPress.org username of the block author.",
                        "type": "string",
                        "context": ["view"]
                    },
                    "icon": {
                        "description": "The block icon.",
                        "type": "string",
                        "format": "uri",
                        "context": ["view"]
                    },
                    "last_updated": {
                        "description": "The date when the block was last updated.",
                        "type": "string",
                        "format": "date-time",
                        "context": ["view"]
                    },
                    "humanized_updated": {
                        "description": "The date when the block was last updated, in fuzzy human readable format.",
                        "type": "string",
                        "context": ["view"]
                    }
                }
            },
            "pattern-directory-item": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "pattern-directory-item",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The pattern ID.",
                        "type": "integer",
                        "minimum": 1,
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The pattern title, in human readable format.",
                        "type": "string",
                        "minLength": 1,
                        "context": ["view", "edit", "embed"]
                    },
                    "content": {
                        "description": "The pattern content.",
                        "type": "string",
                        "minLength": 1,
                        "context": ["view", "edit", "embed"]
                    },
                    "categories": {
                        "description": "The pattern's category slugs.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit", "embed"]
                    },
                    "keywords": {
                        "description": "The pattern's keywords.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "edit", "embed"]
                    },
                    "description": {
                        "description": "A description of the pattern.",
                        "type": "string",
                        "minLength": 1,
                        "context": ["view", "edit", "embed"]
                    },
                    "viewport_width": {
                        "description": "The preferred width of the viewport when previewing a pattern, in pixels.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"]
                    },
                    "block_types": {
                        "description": "The block types which can use this pattern.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string"
                        },
                        "context": ["view", "embed"]
                    }
                }
            },
            "block-pattern": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "block-pattern",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The pattern name.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "title": {
                        "description": "The pattern title, in human readable format.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "content": {
                        "description": "The pattern content.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "description": {
                        "description": "The pattern detailed description.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "viewport_width": {
                        "description": "The pattern viewport width for inserter preview.",
                        "type": "number",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "inserter": {
                        "description": "Determines whether the pattern is visible in inserter.",
                        "type": "boolean",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "categories": {
                        "description": "The pattern category slugs.",
                        "type": "array",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "keywords": {
                        "description": "The pattern keywords.",
                        "type": "array",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "block_types": {
                        "description": "Block types that the pattern is intended to be used with.",
                        "type": "array",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "post_types": {
                        "description": "An array of post types that the pattern is restricted to be used with.",
                        "type": "array",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "template_types": {
                        "description": "An array of template types where the pattern fits.",
                        "type": "array",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "source": {
                        "description": "Where the pattern comes from e.g. core",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"],
                        "enum": ["core", "plugin", "theme", "pattern-directory\/core", "pattern-directory\/theme", "pattern-directory\/featured"]
                    }
                }
            },
            "block-pattern-category": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "block-pattern-category",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The category name.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "label": {
                        "description": "The category label, in human readable format.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    },
                    "description": {
                        "description": "The category description, in human readable format.",
                        "type": "string",
                        "readonly": true,
                        "context": ["view", "edit", "embed"]
                    }
                }
            },
            "menu-location": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "menu-location",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the menu location.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "description": {
                        "description": "The description of the menu location.",
                        "type": "string",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    },
                    "menu": {
                        "description": "The ID of the assigned menu.",
                        "type": "integer",
                        "context": ["embed", "view", "edit"],
                        "readonly": true
                    }
                }
            },
            "font-collection": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "font-collection",
                "type": "object",
                "properties": {
                    "slug": {
                        "description": "Unique identifier for the font collection.",
                        "type": "string",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    },
                    "name": {
                        "description": "The name for the font collection.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "description": {
                        "description": "The description for the font collection.",
                        "type": "string",
                        "context": ["view", "edit", "embed"]
                    },
                    "font_families": {
                        "description": "The font families for the font collection.",
                        "type": "array",
                        "context": ["view", "edit", "embed"]
                    },
                    "categories": {
                        "description": "The categories for the font collection.",
                        "type": "array",
                        "context": ["view", "edit", "embed"]
                    }
                }
            },
            "wp-site-health-test": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "wp-site-health-test",
                "type": "object",
                "properties": {
                    "test": {
                        "type": "string",
                        "description": "The name of the test being run.",
                        "readonly": true
                    },
                    "label": {
                        "type": "string",
                        "description": "A label describing the test.",
                        "readonly": true
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the test.",
                        "enum": ["good", "recommended", "critical"],
                        "readonly": true
                    },
                    "badge": {
                        "type": "object",
                        "description": "The category this test is grouped in.",
                        "properties": {
                            "label": {
                                "type": "string",
                                "readonly": true
                            },
                            "color": {
                                "type": "string",
                                "enum": ["blue", "orange", "red", "green", "purple", "gray"],
                                "readonly": true
                            }
                        },
                        "readonly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A more descriptive explanation of what the test looks for, and why it is important for the user.",
                        "readonly": true
                    },
                    "actions": {
                        "type": "string",
                        "description": "HTML containing an action to direct the user to where they can resolve the issue.",
                        "readonly": true
                    }
                }
            },
            "navigation-fallback": {
                "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                "title": "navigation-fallback",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The unique identifier for the Navigation Menu.",
                        "type": "integer",
                        "context": ["view", "edit", "embed"],
                        "readonly": true
                    }
                }
            }
        }
    },
    "paths": {
        "\/oembed\/1.0": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "oembed\/1.0"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "view"
                    }
                }]
            }
        },
        "\/oembed\/1.0\/embed": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "url",
                    "in": "query",
                    "description": "The URL of the resource for which to fetch oEmbed data.",
                    "required": true,
                    "schema": {
                        "format": "uri"
                    }
                }, {
                    "name": "format",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "json"
                    }
                }, {
                    "name": "maxwidth",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": 600
                    }
                }]
            }
        },
        "\/oembed\/1.0\/proxy": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "url",
                    "in": "query",
                    "description": "The URL of the resource for which to fetch oEmbed data.",
                    "required": true,
                    "schema": {
                        "format": "uri"
                    }
                }, {
                    "name": "format",
                    "in": "query",
                    "description": "The oEmbed format to use.",
                    "required": false,
                    "schema": {
                        "default": "json",
                        "enum": ["json", "xml"]
                    }
                }, {
                    "name": "maxwidth",
                    "in": "query",
                    "description": "The maximum width of the embed frame in pixels.",
                    "required": false,
                    "schema": {
                        "default": 600
                    }
                }, {
                    "name": "maxheight",
                    "in": "query",
                    "description": "The maximum height of the embed frame in pixels.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "discover",
                    "in": "query",
                    "description": "Whether to perform an oEmbed discovery request for unsanctioned providers.",
                    "required": false,
                    "schema": {
                        "default": true
                    }
                }]
            }
        },
        "\/wp-openapi\/v1": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "wp-openapi\/v1"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "view"
                    }
                }]
            }
        },
        "\/wp-openapi\/v1\/schema": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "wp\/v2"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "view"
                    }
                }]
            }
        },
        "\/wp\/v2\/posts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "author",
                    "in": "query",
                    "description": "Limit result set to posts assigned to specific authors.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "author_exclude",
                    "in": "query",
                    "description": "Ensure result set excludes posts assigned to specific authors.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "tax_relation",
                    "in": "query",
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "required": false,
                    "schema": {
                        "enum": ["AND", "OR"]
                    }
                }, {
                    "name": "categories",
                    "in": "query",
                    "description": "Limit result set to items with specific terms assigned in the categories taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                },
                                "include_children": {
                                    "description": "Whether to include child terms in the terms limiting the result set.",
                                    "type": "boolean",
                                    "default": false
                                },
                                "operator": {
                                    "description": "Whether items must be assigned all or any of the specified terms.",
                                    "type": "string",
                                    "enum": ["AND", "OR"],
                                    "default": "OR"
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "categories_exclude",
                    "in": "query",
                    "description": "Limit result set to items except those with specific terms assigned in the categories taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                },
                                "include_children": {
                                    "description": "Whether to include child terms in the terms limiting the result set.",
                                    "type": "boolean",
                                    "default": false
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "tags",
                    "in": "query",
                    "description": "Limit result set to items with specific terms assigned in the tags taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                },
                                "operator": {
                                    "description": "Whether items must be assigned all or any of the specified terms.",
                                    "type": "string",
                                    "enum": ["AND", "OR"],
                                    "default": "OR"
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "tags_exclude",
                    "in": "query",
                    "description": "Limit result set to items except those with specific terms assigned in the tags taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "post_format",
                    "in": "query",
                    "description": "Limit result set to items with specific terms assigned in the post_format taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                },
                                "operator": {
                                    "description": "Whether items must be assigned all or any of the specified terms.",
                                    "type": "string",
                                    "enum": ["AND", "OR"],
                                    "default": "OR"
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "post_format_exclude",
                    "in": "query",
                    "description": "Limit result set to items except those with specific terms assigned in the post_format taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "sticky",
                    "in": "query",
                    "description": "Limit result set to items that are sticky.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "format",
                    "in": "query",
                    "description": "Limit result set to items assigned one or more given formats.",
                    "required": false,
                    "schema": {
                        "uniqueItems": true,
                        "items": {
                            "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "format": {
                                        "description": "The format for the post.",
                                        "type": "string",
                                        "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "sticky": {
                                        "description": "Whether or not the post should be treated as sticky.",
                                        "type": "boolean"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "The terms assigned to the post in the category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "description": "The terms assigned to the post in the post_tag taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "post_format": {
                                        "description": "The terms assigned to the post in the post_format taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/posts\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "excerpt_length",
                    "in": "query",
                    "description": "Override the default excerpt length.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "format": {
                                        "description": "The format for the post.",
                                        "type": "string",
                                        "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "sticky": {
                                        "description": "Whether or not the post should be treated as sticky.",
                                        "type": "boolean"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "The terms assigned to the post in the category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "description": "The terms assigned to the post in the post_tag taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "post_format": {
                                        "description": "The terms assigned to the post in the post_format taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "format": {
                                        "description": "The format for the post.",
                                        "type": "string",
                                        "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "sticky": {
                                        "description": "Whether or not the post should be treated as sticky.",
                                        "type": "boolean"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "The terms assigned to the post in the category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "description": "The terms assigned to the post in the post_tag taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "post_format": {
                                        "description": "The terms assigned to the post in the post_format taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "format": {
                                        "description": "The format for the post.",
                                        "type": "string",
                                        "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "sticky": {
                                        "description": "Whether or not the post should be treated as sticky.",
                                        "type": "boolean"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "The terms assigned to the post in the category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "description": "The terms assigned to the post in the post_tag taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "post_format": {
                                        "description": "The terms assigned to the post in the post_format taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/posts\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["date", "id", "include", "relevance", "slug", "include_slugs", "title"]
                    }
                }]
            }
        },
        "\/wp\/v2\/posts\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as revisions do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/posts\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "query",
                    "description": "The ID for the parent of the autosave.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parent": {
                                        "description": "The ID for the parent of the autosave.",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "format": {
                                        "description": "The format for the post.",
                                        "type": "string",
                                        "enum": ["standard", "aside", "chat", "gallery", "link", "image", "quote", "status", "video", "audio"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "sticky": {
                                        "description": "Whether or not the post should be treated as sticky.",
                                        "type": "boolean"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "categories": {
                                        "description": "The terms assigned to the post in the category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "tags": {
                                        "description": "The terms assigned to the post in the post_tag taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "post_format": {
                                        "description": "The terms assigned to the post in the post_format taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/posts\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/pages": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "author",
                    "in": "query",
                    "description": "Limit result set to posts assigned to specific authors.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "author_exclude",
                    "in": "query",
                    "description": "Ensure result set excludes posts assigned to specific authors.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "menu_order",
                    "in": "query",
                    "description": "Limit result set to posts with a specific menu_order value.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title", "menu_order"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "menu_order": {
                                        "description": "The order of the post in relation to other posts.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/pages\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "excerpt_length",
                    "in": "query",
                    "description": "Override the default excerpt length.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "menu_order": {
                                        "description": "The order of the post in relation to other posts.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "menu_order": {
                                        "description": "The order of the post in relation to other posts.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "menu_order": {
                                        "description": "The order of the post in relation to other posts.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/pages\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["date", "id", "include", "relevance", "slug", "include_slugs", "title"]
                    }
                }]
            }
        },
        "\/wp\/v2\/pages\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as revisions do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/pages\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "query",
                    "description": "The ID for the parent of the autosave.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "menu_order": {
                                        "description": "The order of the post in relation to other posts.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/pages\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/page-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/media": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "author",
                    "in": "query",
                    "description": "Limit result set to posts assigned to specific authors.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "author_exclude",
                    "in": "query",
                    "description": "Ensure result set excludes posts assigned to specific authors.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "inherit",
                        "items": {
                            "enum": ["inherit", "private", "trash"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "media_type",
                    "in": "query",
                    "description": "Limit result set to attachments of a particular media type.",
                    "required": false,
                    "schema": {
                        "enum": ["image", "video", "text", "application", "audio"]
                    }
                }, {
                    "name": "mime_type",
                    "in": "query",
                    "description": "Limit result set to attachments of a particular MIME type.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "alt_text": {
                                        "description": "Alternative text to display when attachment is not displayed.",
                                        "type": "string"
                                    },
                                    "caption": {
                                        "description": "The attachment caption.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Caption for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML caption for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "The attachment description.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Description for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML description for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "post": {
                                        "description": "The ID for the associated post of the attachment.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/media\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "alt_text": {
                                        "description": "Alternative text to display when attachment is not displayed.",
                                        "type": "string"
                                    },
                                    "caption": {
                                        "description": "The attachment caption.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Caption for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML caption for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "The attachment description.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Description for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML description for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "post": {
                                        "description": "The ID for the associated post of the attachment.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "alt_text": {
                                        "description": "Alternative text to display when attachment is not displayed.",
                                        "type": "string"
                                    },
                                    "caption": {
                                        "description": "The attachment caption.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Caption for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML caption for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "The attachment description.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Description for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML description for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "post": {
                                        "description": "The ID for the associated post of the attachment.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "author": {
                                        "description": "The ID for the author of the post.",
                                        "type": "integer"
                                    },
                                    "featured_media": {
                                        "description": "The ID of the featured media for the post.",
                                        "type": "integer"
                                    },
                                    "comment_status": {
                                        "description": "Whether or not comments are open on the post.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "ping_status": {
                                        "description": "Whether or not the post can be pinged.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "alt_text": {
                                        "description": "Alternative text to display when attachment is not displayed.",
                                        "type": "string"
                                    },
                                    "caption": {
                                        "description": "The attachment caption.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Caption for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML caption for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "The attachment description.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Description for the attachment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML description for the attachment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "post": {
                                        "description": "The ID for the associated post of the attachment.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/attachment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/media\/{id}\/post-process": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the attachment.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": ["create-image-subsizes"],
                                        "required": true
                                    }
                                },
                                "required": ["action"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/media\/{id}\/edit": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "src": {
                                        "description": "URL to the edited image file.",
                                        "type": "string",
                                        "required": true,
                                        "format": "uri"
                                    },
                                    "modifiers": {
                                        "description": "Array of image edits.",
                                        "type": "array",
                                        "items": {
                                            "description": "Image edit.",
                                            "type": "object",
                                            "required": ["type", "args"],
                                            "oneOf": [{
                                                "title": "Rotation",
                                                "properties": {
                                                    "type": {
                                                        "description": "Rotation type.",
                                                        "type": "string",
                                                        "enum": ["rotate"]
                                                    },
                                                    "args": {
                                                        "description": "Rotation arguments.",
                                                        "type": "object",
                                                        "required": ["angle"],
                                                        "properties": {
                                                            "angle": {
                                                                "description": "Angle to rotate clockwise in degrees.",
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }, {
                                                "title": "Crop",
                                                "properties": {
                                                    "type": {
                                                        "description": "Crop type.",
                                                        "type": "string",
                                                        "enum": ["crop"]
                                                    },
                                                    "args": {
                                                        "description": "Crop arguments.",
                                                        "type": "object",
                                                        "required": ["left", "top", "width", "height"],
                                                        "properties": {
                                                            "left": {
                                                                "description": "Horizontal position from the left to begin the crop as a percentage of the image width.",
                                                                "type": "number"
                                                            },
                                                            "top": {
                                                                "description": "Vertical position from the top to begin the crop as a percentage of the image height.",
                                                                "type": "number"
                                                            },
                                                            "width": {
                                                                "description": "Width of the crop as a percentage of the image width.",
                                                                "type": "number"
                                                            },
                                                            "height": {
                                                                "description": "Height of the crop as a percentage of the image height.",
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }]
                                        },
                                        "minItems": 1
                                    },
                                    "rotation": {
                                        "description": "The amount to rotate the image clockwise in degrees. DEPRECATED: Use `modifiers` instead.",
                                        "type": "integer",
                                        "maximum": 360,
                                        "exclusiveMaximum": true,
                                        "minimum": 0,
                                        "exclusiveMinimum": true
                                    },
                                    "x": {
                                        "description": "As a percentage of the image, the x position to start the crop from. DEPRECATED: Use `modifiers` instead.",
                                        "type": "number",
                                        "maximum": 100,
                                        "minimum": 0
                                    },
                                    "y": {
                                        "description": "As a percentage of the image, the y position to start the crop from. DEPRECATED: Use `modifiers` instead.",
                                        "type": "number",
                                        "maximum": 100,
                                        "minimum": 0
                                    },
                                    "width": {
                                        "description": "As a percentage of the image, the width to crop the image to. DEPRECATED: Use `modifiers` instead.",
                                        "type": "number",
                                        "maximum": 100,
                                        "minimum": 0
                                    },
                                    "height": {
                                        "description": "As a percentage of the image, the height to crop the image to. DEPRECATED: Use `modifiers` instead.",
                                        "type": "number",
                                        "maximum": 100,
                                        "minimum": 0
                                    }
                                },
                                "required": ["src"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menu-items": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 100,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "menu_order",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title", "menu_order"]
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "tax_relation",
                    "in": "query",
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "required": false,
                    "schema": {
                        "enum": ["AND", "OR"]
                    }
                }, {
                    "name": "menus",
                    "in": "query",
                    "description": "Limit result set to items with specific terms assigned in the menus taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                },
                                "operator": {
                                    "description": "Whether items must be assigned all or any of the specified terms.",
                                    "type": "string",
                                    "enum": ["AND", "OR"],
                                    "default": "OR"
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "menus_exclude",
                    "in": "query",
                    "description": "Limit result set to items except those with specific terms assigned in the menus taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "menu_order",
                    "in": "query",
                    "description": "Limit result set to posts with a specific menu_order value.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "description": "The title for the object.",
                                        "type": ["string", "object"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the object, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the object, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "type": {
                                        "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                                        "default": "custom",
                                        "type": "string",
                                        "enum": ["taxonomy", "post_type", "post_type_archive", "custom"]
                                    },
                                    "status": {
                                        "description": "A named status for the object.",
                                        "default": "publish",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the object.",
                                        "default": 0,
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "attr_title": {
                                        "description": "Text for the title attribute of the link element for this menu item.",
                                        "type": "string"
                                    },
                                    "classes": {
                                        "description": "Class names for the link element of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "description": "The description of this menu item.",
                                        "type": "string"
                                    },
                                    "menu_order": {
                                        "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                                        "default": 1,
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "object": {
                                        "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                                        "type": "string"
                                    },
                                    "object_id": {
                                        "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                                        "default": 0,
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "target": {
                                        "description": "The target attribute of the link element for this menu item.",
                                        "type": "string",
                                        "enum": ["_blank", ""]
                                    },
                                    "url": {
                                        "description": "The URL to which this menu item points.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "xfn": {
                                        "description": "The XFN relationship expressed in the link of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "menus": {
                                        "description": "The terms assigned to the object in the nav_menu taxonomy.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menu-items\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "description": "The title for the object.",
                                        "type": ["string", "object"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the object, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the object, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "type": {
                                        "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                                        "type": "string",
                                        "enum": ["taxonomy", "post_type", "post_type_archive", "custom"]
                                    },
                                    "status": {
                                        "description": "A named status for the object.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the object.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "attr_title": {
                                        "description": "Text for the title attribute of the link element for this menu item.",
                                        "type": "string"
                                    },
                                    "classes": {
                                        "description": "Class names for the link element of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "description": "The description of this menu item.",
                                        "type": "string"
                                    },
                                    "menu_order": {
                                        "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "object": {
                                        "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                                        "type": "string"
                                    },
                                    "object_id": {
                                        "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "target": {
                                        "description": "The target attribute of the link element for this menu item.",
                                        "type": "string",
                                        "enum": ["_blank", ""]
                                    },
                                    "url": {
                                        "description": "The URL to which this menu item points.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "xfn": {
                                        "description": "The XFN relationship expressed in the link of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "menus": {
                                        "description": "The terms assigned to the object in the nav_menu taxonomy.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "description": "The title for the object.",
                                        "type": ["string", "object"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the object, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the object, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "type": {
                                        "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                                        "type": "string",
                                        "enum": ["taxonomy", "post_type", "post_type_archive", "custom"]
                                    },
                                    "status": {
                                        "description": "A named status for the object.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the object.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "attr_title": {
                                        "description": "Text for the title attribute of the link element for this menu item.",
                                        "type": "string"
                                    },
                                    "classes": {
                                        "description": "Class names for the link element of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "description": "The description of this menu item.",
                                        "type": "string"
                                    },
                                    "menu_order": {
                                        "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "object": {
                                        "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                                        "type": "string"
                                    },
                                    "object_id": {
                                        "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "target": {
                                        "description": "The target attribute of the link element for this menu item.",
                                        "type": "string",
                                        "enum": ["_blank", ""]
                                    },
                                    "url": {
                                        "description": "The URL to which this menu item points.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "xfn": {
                                        "description": "The XFN relationship expressed in the link of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "menus": {
                                        "description": "The terms assigned to the object in the nav_menu taxonomy.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "description": "The title for the object.",
                                        "type": ["string", "object"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the object, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the object, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "type": {
                                        "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                                        "type": "string",
                                        "enum": ["taxonomy", "post_type", "post_type_archive", "custom"]
                                    },
                                    "status": {
                                        "description": "A named status for the object.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the object.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "attr_title": {
                                        "description": "Text for the title attribute of the link element for this menu item.",
                                        "type": "string"
                                    },
                                    "classes": {
                                        "description": "Class names for the link element of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "description": "The description of this menu item.",
                                        "type": "string"
                                    },
                                    "menu_order": {
                                        "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "object": {
                                        "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                                        "type": "string"
                                    },
                                    "object_id": {
                                        "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "target": {
                                        "description": "The target attribute of the link element for this menu item.",
                                        "type": "string",
                                        "enum": ["_blank", ""]
                                    },
                                    "url": {
                                        "description": "The URL to which this menu item points.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "xfn": {
                                        "description": "The XFN relationship expressed in the link of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "menus": {
                                        "description": "The terms assigned to the object in the nav_menu taxonomy.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menu-items\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "query",
                    "description": "The ID for the parent of the autosave.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parent": {
                                        "description": "The ID for the parent of the object.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "title": {
                                        "description": "The title for the object.",
                                        "type": ["string", "object"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the object, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the object, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "type": {
                                        "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                                        "type": "string",
                                        "enum": ["taxonomy", "post_type", "post_type_archive", "custom"]
                                    },
                                    "status": {
                                        "description": "A named status for the object.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "attr_title": {
                                        "description": "Text for the title attribute of the link element for this menu item.",
                                        "type": "string"
                                    },
                                    "classes": {
                                        "description": "Class names for the link element of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "description": "The description of this menu item.",
                                        "type": "string"
                                    },
                                    "menu_order": {
                                        "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "object": {
                                        "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                                        "type": "string"
                                    },
                                    "object_id": {
                                        "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "target": {
                                        "description": "The target attribute of the link element for this menu item.",
                                        "type": "string",
                                        "enum": ["_blank", ""]
                                    },
                                    "url": {
                                        "description": "The URL to which this menu item points.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "xfn": {
                                        "description": "The XFN relationship expressed in the link of this menu item.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "menus": {
                                        "description": "The terms assigned to the object in the nav_menu taxonomy.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menu-items\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu_item-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/oembed_cache": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/oembed_cache\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/oembed_cache\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "query",
                    "description": "The ID for the parent of the autosave.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parent": {
                                        "description": "The ID for the parent of the autosave.",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/oembed_cache\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/oembed_cache-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/blocks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "tax_relation",
                    "in": "query",
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "required": false,
                    "schema": {
                        "enum": ["AND", "OR"]
                    }
                }, {
                    "name": "wp_pattern_category",
                    "in": "query",
                    "description": "Limit result set to items with specific terms assigned in the wp_pattern_category taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                },
                                "operator": {
                                    "description": "Whether items must be assigned all or any of the specified terms.",
                                    "type": "string",
                                    "enum": ["AND", "OR"],
                                    "default": "OR"
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }, {
                    "name": "wp_pattern_category_exclude",
                    "in": "query",
                    "description": "Limit result set to items except those with specific terms assigned in the wp_pattern_category taxonomy.",
                    "required": false,
                    "schema": {
                        "oneOf": [{
                            "title": "Term ID List",
                            "description": "Match terms with the listed IDs.",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }, {
                            "title": "Term ID Taxonomy Query",
                            "description": "Perform an advanced term query.",
                            "type": "object",
                            "properties": {
                                "terms": {
                                    "description": "Term IDs.",
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    },
                                    "default": []
                                }
                            },
                            "additionalProperties": false
                        }]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "wp_pattern_sync_status": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": "",
                                                "enum": ["partial", "unsynced"]
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "wp_pattern_category": {
                                        "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/blocks\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "excerpt_length",
                    "in": "query",
                    "description": "Override the default excerpt length.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "wp_pattern_sync_status": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": "",
                                                "enum": ["partial", "unsynced"]
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "wp_pattern_category": {
                                        "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "wp_pattern_sync_status": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": "",
                                                "enum": ["partial", "unsynced"]
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "wp_pattern_category": {
                                        "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "wp_pattern_sync_status": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": "",
                                                "enum": ["partial", "unsynced"]
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "wp_pattern_category": {
                                        "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/blocks\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["date", "id", "include", "relevance", "slug", "include_slugs", "title"]
                    }
                }]
            }
        },
        "\/wp\/v2\/blocks\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as revisions do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/blocks\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "query",
                    "description": "The ID for the parent of the autosave.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parent": {
                                        "description": "The ID for the parent of the autosave.",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "excerpt": {
                                        "description": "The excerpt for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Excerpt for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML excerpt for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the excerpt is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "_acf_changed": {
                                                "type": "boolean",
                                                "title": "",
                                                "description": "",
                                                "default": false
                                            },
                                            "wp_pattern_sync_status": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": "",
                                                "enum": ["partial", "unsynced"]
                                            },
                                            "footnotes": {
                                                "type": "string",
                                                "title": "",
                                                "description": "",
                                                "default": ""
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    },
                                    "wp_pattern_category": {
                                        "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/blocks\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_block-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/templates\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["date", "id", "include", "relevance", "slug", "include_slugs", "title"]
                    }
                }]
            }
        },
        "\/wp\/v2\/templates\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as revisions do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/templates\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/templates\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/templates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "wp_id",
                    "in": "query",
                    "description": "Limit to the specified post id.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "area",
                    "in": "query",
                    "description": "Limit to the specified template part area.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post_type",
                    "in": "query",
                    "description": "Post type to get the templates for.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "required": true,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "default": "",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "default": "",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "default": "",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "default": "publish",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    }
                                },
                                "required": ["slug"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/templates\/lookup": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "slug",
                    "in": "query",
                    "description": "The slug of the template to get the fallback for",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "is_custom",
                    "in": "query",
                    "description": "Indicates if a template is custom or part of the template hierarchy",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "template_prefix",
                    "in": "query",
                    "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
                    "required": false,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/templates\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/template-parts\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["date", "id", "include", "relevance", "slug", "include_slugs", "title"]
                    }
                }]
            }
        },
        "\/wp\/v2\/template-parts\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as revisions do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/template-parts\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    },
                                    "area": {
                                        "description": "Where the template part is intended for use (header, footer, etc.)",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/template-parts\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/template-parts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "wp_id",
                    "in": "query",
                    "description": "Limit to the specified post id.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "area",
                    "in": "query",
                    "description": "Limit to the specified template part area.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post_type",
                    "in": "query",
                    "description": "Post type to get the templates for.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "required": true,
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "default": "",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "default": "",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "default": "",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "default": "publish",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    },
                                    "area": {
                                        "description": "Where the template part is intended for use (header, footer, etc.)",
                                        "type": "string"
                                    }
                                },
                                "required": ["slug"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/template-parts\/lookup": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "slug",
                    "in": "query",
                    "description": "The slug of the template to get the fallback for",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "is_custom",
                    "in": "query",
                    "description": "Indicates if a template is custom or part of the template hierarchy",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "template_prefix",
                    "in": "query",
                    "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
                    "required": false,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/template-parts\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    },
                                    "area": {
                                        "description": "Where the template part is intended for use (header, footer, etc.)",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    },
                                    "area": {
                                        "description": "Where the template part is intended for use (header, footer, etc.)",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "Unique slug identifying the template.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": "[a-zA-Z0-9_\\%-]+"
                                    },
                                    "theme": {
                                        "description": "Theme identifier for the template.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of template.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "Content of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit"]
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the template.",
                                                "type": "integer",
                                                "context": ["edit"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "title": {
                                        "description": "Title of template.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the template, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the template, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "description": {
                                        "description": "Description of template.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status of template.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "author": {
                                        "description": "The ID for the author of the template.",
                                        "type": "integer"
                                    },
                                    "area": {
                                        "description": "Where the template part is intended for use (header, footer, etc.)",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/global-styles\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_global_styles-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/global-styles\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_global_styles-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the global styles revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the global styles revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/global-styles\/themes\/{stylesheet}\/variations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "stylesheet",
                    "in": "path",
                    "description": "The theme identifier",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/global-styles\/themes\/{stylesheet}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "stylesheet",
                    "in": "path",
                    "description": "The theme identifier",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/global-styles\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_global_styles"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a template",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_global_styles"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "styles": {
                                        "description": "Global styles.",
                                        "type": ["object"]
                                    },
                                    "settings": {
                                        "description": "Global settings.",
                                        "type": ["object"]
                                    },
                                    "title": {
                                        "description": "Title of the global styles variation.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the global styles variation, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_global_styles"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "styles": {
                                        "description": "Global styles.",
                                        "type": ["object"]
                                    },
                                    "settings": {
                                        "description": "Global settings.",
                                        "type": ["object"]
                                    },
                                    "title": {
                                        "description": "Title of the global styles variation.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the global styles variation, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_global_styles"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "styles": {
                                        "description": "Global styles.",
                                        "type": ["object"]
                                    },
                                    "settings": {
                                        "description": "Global settings.",
                                        "type": ["object"]
                                    },
                                    "title": {
                                        "description": "Title of the global styles variation.",
                                        "type": ["object", "string"],
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the global styles variation, as it exists in the database.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/navigation": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/navigation\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/navigation\/{parent}\/revisions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by object attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["date", "id", "include", "relevance", "slug", "include_slugs", "title"]
                    }
                }]
            }
        },
        "\/wp\/v2\/navigation\/{parent}\/revisions\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the revision.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the revision.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as revisions do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/navigation\/{id}\/autosaves": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "query",
                    "description": "The ID for the parent of the autosave.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "parent": {
                                        "description": "The ID for the parent of the autosave.",
                                        "type": "integer"
                                    },
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "content": {
                                        "description": "The content for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit", "embed"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            },
                                            "block_version": {
                                                "description": "Version of the content block format used by the post.",
                                                "type": "integer",
                                                "context": ["edit", "embed"],
                                                "readonly": true
                                            },
                                            "protected": {
                                                "description": "Whether the content is protected with a password.",
                                                "type": "boolean",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/navigation\/{parent}\/autosaves\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_navigation-revision"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "parent",
                    "in": "path",
                    "description": "The ID for the parent of the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "The ID for the autosave.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/font-families": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "id",
                        "enum": ["id", "include"]
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_json_version": {
                                        "description": "Version of the theme.json schema used for the typography settings.",
                                        "default": 3,
                                        "type": "integer",
                                        "maximum": 3,
                                        "minimum": 2
                                    },
                                    "font_family_settings": {
                                        "description": "font-family declaration in theme.json format, encoded as a string.",
                                        "type": "string",
                                        "required": true
                                    }
                                },
                                "required": ["font_family_settings"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/font-families\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_json_version": {
                                        "description": "Version of the theme.json schema used for the typography settings.",
                                        "default": 3,
                                        "type": "integer",
                                        "maximum": 3,
                                        "minimum": 2
                                    },
                                    "font_family_settings": {
                                        "description": "font-family declaration in theme.json format, encoded as a string.",
                                        "type": "string",
                                        "required": true
                                    }
                                },
                                "required": ["font_family_settings"]
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_json_version": {
                                        "description": "Version of the theme.json schema used for the typography settings.",
                                        "default": 3,
                                        "type": "integer",
                                        "maximum": 3,
                                        "minimum": 2
                                    },
                                    "font_family_settings": {
                                        "description": "font-family declaration in theme.json format, encoded as a string.",
                                        "type": "string",
                                        "required": true
                                    }
                                },
                                "required": ["font_family_settings"]
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_json_version": {
                                        "description": "Version of the theme.json schema used for the typography settings.",
                                        "default": 3,
                                        "type": "integer",
                                        "maximum": 3,
                                        "minimum": 2
                                    },
                                    "font_family_settings": {
                                        "description": "font-family declaration in theme.json format, encoded as a string.",
                                        "type": "string",
                                        "required": true
                                    }
                                },
                                "required": ["font_family_settings"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_family"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/font-families\/{font_family_id}\/font-faces": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_face"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "The ID for the parent font family of the font face.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "id",
                        "enum": ["id", "include"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_face"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "The ID for the parent font family of the font face.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "theme_json_version": {
                                        "description": "Version of the theme.json schema used for the typography settings.",
                                        "default": 3,
                                        "type": "integer",
                                        "maximum": 3,
                                        "minimum": 2
                                    },
                                    "font_face_settings": {
                                        "description": "font-face declaration in theme.json format, encoded as a string.",
                                        "type": "string",
                                        "required": true
                                    }
                                },
                                "required": ["font_face_settings"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/font-families\/{font_family_id}\/font-faces\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_face"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "The ID for the parent font family of the font face.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the font face.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_font_face"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "The ID for the parent font family of the font face.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the font face.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-taxonomy": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-taxonomy\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-post-type": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-post-type\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-post-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-ui-options-page": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-ui-options-page\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-ui-options-page"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-field-group": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-field-group\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field-group"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-field": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_after",
                    "in": "query",
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "modified_before",
                    "in": "query",
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_semantics",
                    "in": "query",
                    "description": "How to interpret the search input.",
                    "required": false,
                    "schema": {
                        "enum": ["exact"]
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to items with particular parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "search_columns",
                    "in": "query",
                    "description": "Array of column names to be searched.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["post_title", "post_content", "post_excerpt"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "default": "publish",
                        "items": {
                            "enum": ["publish", "future", "draft", "pending", "private", "trash", "auto-draft", "inherit", "request-pending", "request-confirmed", "request-failed", "request-completed", "acf-disabled", "any"],
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/acf-field\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "description": "The date the post was published, in the site's timezone.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the post was published, as GMT.",
                                        "type": ["string", "null"],
                                        "format": "date-time"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the post unique to its type.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "A named status for the post.",
                                        "type": "string",
                                        "enum": ["publish", "future", "draft", "pending", "private", "acf-disabled"]
                                    },
                                    "password": {
                                        "description": "A password to protect access to the content and excerpt.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the post.",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "The title for the post.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Title for the post, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML title for the post, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "template": {
                                        "description": "The theme file to use to display the post.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/acf-field"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the post.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/types\/{type}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "type",
                    "in": "path",
                    "description": "An alphanumeric identifier for the post type.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/statuses": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/statuses\/{status}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/status"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "status",
                    "in": "path",
                    "description": "An alphanumeric identifier for the status.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/taxonomies": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "description": "Limit results to taxonomies associated with a specific post type.",
                    "required": false,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/taxonomies\/{taxonomy}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/taxonomy"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "taxonomy",
                    "in": "path",
                    "description": "An alphanumeric identifier for the taxonomy.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific parent.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The parent term ID.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/categories\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The parent term ID.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The parent term ID.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "parent": {
                                        "description": "The parent term ID.",
                                        "type": "integer"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/tags\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/tag"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menus": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    },
                                    "locations": {
                                        "description": "The locations assigned to the menu.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "auto_add": {
                                        "description": "Whether to automatically add top level pages to this menu.",
                                        "type": "boolean"
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menus\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    },
                                    "locations": {
                                        "description": "The locations assigned to the menu.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "auto_add": {
                                        "description": "Whether to automatically add top level pages to this menu.",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    },
                                    "locations": {
                                        "description": "The locations assigned to the menu.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "auto_add": {
                                        "description": "Whether to automatically add top level pages to this menu.",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    },
                                    "locations": {
                                        "description": "The locations assigned to the menu.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "auto_add": {
                                        "description": "Whether to automatically add top level pages to this menu.",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/nav_menu"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/link_category": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/link_category\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/link_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/post_format": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/post_format\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/post_format"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/wp_theme": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/wp_theme\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/wp_template_part_area": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/wp_template_part_area\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_template_part_area"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/wp_pattern_category": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by term attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "slug", "include_slugs", "term_group", "description", "count"]
                    }
                }, {
                    "name": "hide_empty",
                    "in": "query",
                    "description": "Whether to hide terms not assigned to any posts.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to terms assigned to a specific post.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/wp_pattern_category\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "description": "HTML description of the term.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "HTML title for the term.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the term unique to its type.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp_pattern_category"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the term.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as terms do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by user attribute.",
                    "required": false,
                    "schema": {
                        "default": "name",
                        "enum": ["id", "include", "name", "registered_date", "slug", "include_slugs", "email", "url"]
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit result set to users with one or more specific slugs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "roles",
                    "in": "query",
                    "description": "Limit result set to users matching at least one specific role provided. Accepts csv list or single role.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "capabilities",
                    "in": "query",
                    "description": "Limit result set to users matching at least one specific capability provided. Accepts csv list or single capability.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string"
                        }
                    }
                }, {
                    "name": "who",
                    "in": "query",
                    "description": "Limit result set to users who are considered authors.",
                    "required": false,
                    "schema": {
                        "enum": ["authors"]
                    }
                }, {
                    "name": "has_published_posts",
                    "in": "query",
                    "description": "Limit result set to users who have published posts.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string",
                            "enum": {
                                "post": "post",
                                "page": "page",
                                "attachment": "attachment",
                                "nav_menu_item": "nav_menu_item",
                                "oembed_cache": "oembed_cache",
                                "wp_block": "wp_block",
                                "wp_template": "wp_template",
                                "wp_template_part": "wp_template_part",
                                "wp_global_styles": "wp_global_styles",
                                "wp_navigation": "wp_navigation",
                                "wp_font_family": "wp_font_family",
                                "wp_font_face": "wp_font_face",
                                "acf-taxonomy": "acf-taxonomy",
                                "acf-post-type": "acf-post-type",
                                "acf-ui-options-page": "acf-ui-options-page",
                                "acf-field-group": "acf-field-group",
                                "acf-field": "acf-field"
                            }
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string",
                                        "required": true
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "required": true,
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string",
                                        "required": true
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                },
                                "required": ["username", "email", "password"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/users\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the user.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the user.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the user.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the user.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the user.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as users do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "reassign": {
                                        "description": "Reassign the deleted user's posts and links to this user ID.",
                                        "type": "integer",
                                        "required": true
                                    }
                                },
                                "required": ["reassign"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/users\/me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "description": "Login name for the user.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Display name for the user.",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name for the user.",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name for the user.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "The email address for the user.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "url": {
                                        "description": "URL of the user.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "description": {
                                        "description": "Description of the user.",
                                        "type": "string"
                                    },
                                    "locale": {
                                        "description": "Locale for the user.",
                                        "type": "string",
                                        "enum": ["", "en_US"]
                                    },
                                    "nickname": {
                                        "description": "The nickname for the user.",
                                        "type": "string"
                                    },
                                    "slug": {
                                        "description": "An alphanumeric identifier for the user.",
                                        "type": "string"
                                    },
                                    "roles": {
                                        "description": "Roles assigned to the user.",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "password": {
                                        "description": "Password for the user (never included).",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": {
                                            "persisted_preferences": {
                                                "type": "object",
                                                "title": "",
                                                "description": "",
                                                "default": [],
                                                "context": ["edit"],
                                                "properties": {
                                                    "_modified": {
                                                        "description": "The date and time the preferences were updated.",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readonly": false
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/user"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Required to be true, as users do not support trashing.",
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "reassign": {
                                        "description": "Reassign the deleted user's posts and links to this user ID.",
                                        "type": "integer",
                                        "required": true
                                    }
                                },
                                "required": ["reassign"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/users\/{user_id}\/application-passwords": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "app_id": {
                                        "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "description": "The name of the application password.",
                                        "type": "string",
                                        "required": true,
                                        "minLength": 1,
                                        "pattern": ".*\\S.*"
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/users\/{user_id}\/application-passwords\/introspect": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/users\/{user_id}\/application-passwords\/{uuid}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "uuid",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "uuid",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "app_id": {
                                        "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "description": "The name of the application password.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": ".*\\S.*"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "uuid",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "app_id": {
                                        "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "description": "The name of the application password.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": ".*\\S.*"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "uuid",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "app_id": {
                                        "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "name": {
                                        "description": "The name of the application password.",
                                        "type": "string",
                                        "minLength": 1,
                                        "pattern": ".*\\S.*"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/application-password"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "user_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "uuid",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/comments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "after",
                    "in": "query",
                    "description": "Limit response to comments published after a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "author",
                    "in": "query",
                    "description": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "author_exclude",
                    "in": "query",
                    "description": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "author_email",
                    "in": "query",
                    "description": "Limit result set to that from a specific author email. Requires authorization.",
                    "required": false,
                    "schema": {
                        "format": "email"
                    }
                }, {
                    "name": "before",
                    "in": "query",
                    "description": "Limit response to comments published before a given ISO8601 compliant date.",
                    "required": false,
                    "schema": {
                        "format": "date-time"
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by comment attribute.",
                    "required": false,
                    "schema": {
                        "default": "date_gmt",
                        "enum": ["date", "date_gmt", "id", "include", "post", "parent", "type"]
                    }
                }, {
                    "name": "parent",
                    "in": "query",
                    "description": "Limit result set to comments of specific parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "parent_exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific parent IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "post",
                    "in": "query",
                    "description": "Limit result set to comments assigned to specific post IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to comments assigned a specific status. Requires authorization.",
                    "required": false,
                    "schema": {
                        "default": "approve"
                    }
                }, {
                    "name": "type",
                    "in": "query",
                    "description": "Limit result set to comments assigned a specific type. Requires authorization.",
                    "required": false,
                    "schema": {
                        "default": "comment"
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the post if it is password protected.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "author": {
                                        "description": "The ID of the user object, if author was a user.",
                                        "type": "integer"
                                    },
                                    "author_email": {
                                        "description": "Email address for the comment author.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "author_ip": {
                                        "description": "IP address for the comment author.",
                                        "type": "string",
                                        "format": "ip"
                                    },
                                    "author_name": {
                                        "description": "Display name for the comment author.",
                                        "type": "string"
                                    },
                                    "author_url": {
                                        "description": "URL for the comment author.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "author_user_agent": {
                                        "description": "User agent for the comment author.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "The content for the comment.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the comment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the comment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "date": {
                                        "description": "The date the comment was published, in the site's timezone.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the comment was published, as GMT.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the comment.",
                                        "default": 0,
                                        "type": "integer"
                                    },
                                    "post": {
                                        "description": "The ID of the associated post object.",
                                        "default": 0,
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "State of the comment.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/comments\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the comment.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "password",
                    "in": "query",
                    "description": "The password for the parent post of the comment (if the post is password protected).",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the comment.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "author": {
                                        "description": "The ID of the user object, if author was a user.",
                                        "type": "integer"
                                    },
                                    "author_email": {
                                        "description": "Email address for the comment author.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "author_ip": {
                                        "description": "IP address for the comment author.",
                                        "type": "string",
                                        "format": "ip"
                                    },
                                    "author_name": {
                                        "description": "Display name for the comment author.",
                                        "type": "string"
                                    },
                                    "author_url": {
                                        "description": "URL for the comment author.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "author_user_agent": {
                                        "description": "User agent for the comment author.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "The content for the comment.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the comment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the comment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "date": {
                                        "description": "The date the comment was published, in the site's timezone.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the comment was published, as GMT.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the comment.",
                                        "type": "integer"
                                    },
                                    "post": {
                                        "description": "The ID of the associated post object.",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "State of the comment.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the comment.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "author": {
                                        "description": "The ID of the user object, if author was a user.",
                                        "type": "integer"
                                    },
                                    "author_email": {
                                        "description": "Email address for the comment author.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "author_ip": {
                                        "description": "IP address for the comment author.",
                                        "type": "string",
                                        "format": "ip"
                                    },
                                    "author_name": {
                                        "description": "Display name for the comment author.",
                                        "type": "string"
                                    },
                                    "author_url": {
                                        "description": "URL for the comment author.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "author_user_agent": {
                                        "description": "User agent for the comment author.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "The content for the comment.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the comment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the comment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "date": {
                                        "description": "The date the comment was published, in the site's timezone.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the comment was published, as GMT.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the comment.",
                                        "type": "integer"
                                    },
                                    "post": {
                                        "description": "The ID of the associated post object.",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "State of the comment.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the comment.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "author": {
                                        "description": "The ID of the user object, if author was a user.",
                                        "type": "integer"
                                    },
                                    "author_email": {
                                        "description": "Email address for the comment author.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "author_ip": {
                                        "description": "IP address for the comment author.",
                                        "type": "string",
                                        "format": "ip"
                                    },
                                    "author_name": {
                                        "description": "Display name for the comment author.",
                                        "type": "string"
                                    },
                                    "author_url": {
                                        "description": "URL for the comment author.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "author_user_agent": {
                                        "description": "User agent for the comment author.",
                                        "type": "string"
                                    },
                                    "content": {
                                        "description": "The content for the comment.",
                                        "type": "object",
                                        "properties": {
                                            "raw": {
                                                "description": "Content for the comment, as it exists in the database.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "rendered": {
                                                "description": "HTML content for the comment, transformed for display.",
                                                "type": "string",
                                                "context": ["view", "edit", "embed"],
                                                "readonly": true
                                            }
                                        }
                                    },
                                    "date": {
                                        "description": "The date the comment was published, in the site's timezone.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_gmt": {
                                        "description": "The date the comment was published, as GMT.",
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "parent": {
                                        "description": "The ID for the parent of the comment.",
                                        "type": "integer"
                                    },
                                    "post": {
                                        "description": "The ID of the associated post object.",
                                        "type": "integer"
                                    },
                                    "status": {
                                        "description": "State of the comment.",
                                        "type": "string"
                                    },
                                    "meta": {
                                        "description": "Meta fields.",
                                        "type": "object",
                                        "properties": []
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/comment"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the comment.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to bypass Trash and force deletion.",
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "password": {
                                        "description": "The password for the parent post of the comment (if the post is password protected).",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/search-result"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "type",
                    "in": "query",
                    "description": "Limit results to items of an object type.",
                    "required": false,
                    "schema": {
                        "default": "post",
                        "enum": ["post", "term", "post-format"]
                    }
                }, {
                    "name": "subtype",
                    "in": "query",
                    "description": "Limit results to items of one or more object subtypes.",
                    "required": false,
                    "schema": {
                        "default": "any",
                        "items": {
                            "enum": ["post", "page", "category", "post_tag", "post_format", "any"],
                            "type": "string"
                        }
                    }
                }, {
                    "name": "exclude",
                    "in": "query",
                    "description": "Ensure result set excludes specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }, {
                    "name": "include",
                    "in": "query",
                    "description": "Limit result set to specific IDs.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "integer"
                        }
                    }
                }]
            }
        },
        "\/wp\/v2\/block-renderer\/{name}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/rendered-block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "name",
                    "in": "path",
                    "description": "Unique registered name for the block.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["edit"]
                    }
                }, {
                    "name": "attributes",
                    "in": "query",
                    "description": "Attributes for the block.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "post_id",
                    "in": "query",
                    "description": "ID of the post context.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/rendered-block"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "name",
                    "in": "path",
                    "description": "Unique registered name for the block.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "context": {
                                        "description": "Scope under which the request is made; determines fields present in response.",
                                        "default": "view",
                                        "type": "string",
                                        "enum": ["edit"]
                                    },
                                    "attributes": {
                                        "description": "Attributes for the block.",
                                        "default": [],
                                        "type": "object"
                                    },
                                    "post_id": {
                                        "description": "ID of the post context.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/block-types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/block-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "namespace",
                    "in": "query",
                    "description": "Block namespace.",
                    "required": false,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/block-types\/{namespace}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/block-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "namespace",
                    "in": "path",
                    "description": "Block namespace.",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/block-types\/{namespace}\/{name}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/block-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "name",
                    "in": "path",
                    "description": "Block name.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "namespace",
                    "in": "path",
                    "description": "Block namespace.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/settings": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/settings"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/settings"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "title": "Title",
                                        "description": "Site title.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "title": "Tagline",
                                        "description": "Site tagline.",
                                        "type": "string"
                                    },
                                    "url": {
                                        "title": "",
                                        "description": "Site URL.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "email": {
                                        "title": "",
                                        "description": "This address is used for admin purposes, like new user notification.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "timezone": {
                                        "title": "",
                                        "description": "A city in the same timezone as you.",
                                        "type": "string"
                                    },
                                    "date_format": {
                                        "title": "",
                                        "description": "A date format for all date strings.",
                                        "type": "string"
                                    },
                                    "time_format": {
                                        "title": "",
                                        "description": "A time format for all time strings.",
                                        "type": "string"
                                    },
                                    "start_of_week": {
                                        "title": "",
                                        "description": "A day number of the week that the week should start on.",
                                        "type": "integer"
                                    },
                                    "language": {
                                        "title": "",
                                        "description": "WordPress locale code.",
                                        "type": "string"
                                    },
                                    "use_smilies": {
                                        "title": "",
                                        "description": "Convert emoticons like :-) and :-P to graphics on display.",
                                        "type": "boolean"
                                    },
                                    "default_category": {
                                        "title": "",
                                        "description": "Default post category.",
                                        "type": "integer"
                                    },
                                    "default_post_format": {
                                        "title": "",
                                        "description": "Default post format.",
                                        "type": "string"
                                    },
                                    "posts_per_page": {
                                        "title": "Maximum posts per page",
                                        "description": "Blog pages show at most.",
                                        "type": "integer"
                                    },
                                    "show_on_front": {
                                        "title": "Show on front",
                                        "description": "What to show on the front page",
                                        "type": "string"
                                    },
                                    "page_on_front": {
                                        "title": "Page on front",
                                        "description": "The ID of the page that should be displayed on the front page",
                                        "type": "integer"
                                    },
                                    "page_for_posts": {
                                        "title": "",
                                        "description": "The ID of the page that should display the latest posts",
                                        "type": "integer"
                                    },
                                    "default_ping_status": {
                                        "title": "",
                                        "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "default_comment_status": {
                                        "title": "Allow comments on new posts",
                                        "description": "Allow people to submit comments on new posts.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "site_logo": {
                                        "title": "Logo",
                                        "description": "Site logo.",
                                        "type": "integer"
                                    },
                                    "site_icon": {
                                        "title": "Icon",
                                        "description": "Site icon.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/settings"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "title": "Title",
                                        "description": "Site title.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "title": "Tagline",
                                        "description": "Site tagline.",
                                        "type": "string"
                                    },
                                    "url": {
                                        "title": "",
                                        "description": "Site URL.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "email": {
                                        "title": "",
                                        "description": "This address is used for admin purposes, like new user notification.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "timezone": {
                                        "title": "",
                                        "description": "A city in the same timezone as you.",
                                        "type": "string"
                                    },
                                    "date_format": {
                                        "title": "",
                                        "description": "A date format for all date strings.",
                                        "type": "string"
                                    },
                                    "time_format": {
                                        "title": "",
                                        "description": "A time format for all time strings.",
                                        "type": "string"
                                    },
                                    "start_of_week": {
                                        "title": "",
                                        "description": "A day number of the week that the week should start on.",
                                        "type": "integer"
                                    },
                                    "language": {
                                        "title": "",
                                        "description": "WordPress locale code.",
                                        "type": "string"
                                    },
                                    "use_smilies": {
                                        "title": "",
                                        "description": "Convert emoticons like :-) and :-P to graphics on display.",
                                        "type": "boolean"
                                    },
                                    "default_category": {
                                        "title": "",
                                        "description": "Default post category.",
                                        "type": "integer"
                                    },
                                    "default_post_format": {
                                        "title": "",
                                        "description": "Default post format.",
                                        "type": "string"
                                    },
                                    "posts_per_page": {
                                        "title": "Maximum posts per page",
                                        "description": "Blog pages show at most.",
                                        "type": "integer"
                                    },
                                    "show_on_front": {
                                        "title": "Show on front",
                                        "description": "What to show on the front page",
                                        "type": "string"
                                    },
                                    "page_on_front": {
                                        "title": "Page on front",
                                        "description": "The ID of the page that should be displayed on the front page",
                                        "type": "integer"
                                    },
                                    "page_for_posts": {
                                        "title": "",
                                        "description": "The ID of the page that should display the latest posts",
                                        "type": "integer"
                                    },
                                    "default_ping_status": {
                                        "title": "",
                                        "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "default_comment_status": {
                                        "title": "Allow comments on new posts",
                                        "description": "Allow people to submit comments on new posts.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "site_logo": {
                                        "title": "Logo",
                                        "description": "Site logo.",
                                        "type": "integer"
                                    },
                                    "site_icon": {
                                        "title": "Icon",
                                        "description": "Site icon.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/settings"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "title": "Title",
                                        "description": "Site title.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "title": "Tagline",
                                        "description": "Site tagline.",
                                        "type": "string"
                                    },
                                    "url": {
                                        "title": "",
                                        "description": "Site URL.",
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "email": {
                                        "title": "",
                                        "description": "This address is used for admin purposes, like new user notification.",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "timezone": {
                                        "title": "",
                                        "description": "A city in the same timezone as you.",
                                        "type": "string"
                                    },
                                    "date_format": {
                                        "title": "",
                                        "description": "A date format for all date strings.",
                                        "type": "string"
                                    },
                                    "time_format": {
                                        "title": "",
                                        "description": "A time format for all time strings.",
                                        "type": "string"
                                    },
                                    "start_of_week": {
                                        "title": "",
                                        "description": "A day number of the week that the week should start on.",
                                        "type": "integer"
                                    },
                                    "language": {
                                        "title": "",
                                        "description": "WordPress locale code.",
                                        "type": "string"
                                    },
                                    "use_smilies": {
                                        "title": "",
                                        "description": "Convert emoticons like :-) and :-P to graphics on display.",
                                        "type": "boolean"
                                    },
                                    "default_category": {
                                        "title": "",
                                        "description": "Default post category.",
                                        "type": "integer"
                                    },
                                    "default_post_format": {
                                        "title": "",
                                        "description": "Default post format.",
                                        "type": "string"
                                    },
                                    "posts_per_page": {
                                        "title": "Maximum posts per page",
                                        "description": "Blog pages show at most.",
                                        "type": "integer"
                                    },
                                    "show_on_front": {
                                        "title": "Show on front",
                                        "description": "What to show on the front page",
                                        "type": "string"
                                    },
                                    "page_on_front": {
                                        "title": "Page on front",
                                        "description": "The ID of the page that should be displayed on the front page",
                                        "type": "integer"
                                    },
                                    "page_for_posts": {
                                        "title": "",
                                        "description": "The ID of the page that should display the latest posts",
                                        "type": "integer"
                                    },
                                    "default_ping_status": {
                                        "title": "",
                                        "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "default_comment_status": {
                                        "title": "Allow comments on new posts",
                                        "description": "Allow people to submit comments on new posts.",
                                        "type": "string",
                                        "enum": ["open", "closed"]
                                    },
                                    "site_logo": {
                                        "title": "Logo",
                                        "description": "Site logo.",
                                        "type": "integer"
                                    },
                                    "site_icon": {
                                        "title": "Icon",
                                        "description": "Site icon.",
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/themes": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "status",
                    "in": "query",
                    "description": "Limit result set to themes assigned one or more statuses.",
                    "required": false,
                    "schema": {
                        "items": {
                            "enum": ["active", "inactive"],
                            "type": "string"
                        }
                    }
                }]
            }
        },
        "\/wp\/v2\/themes\/{stylesheet}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/theme"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "stylesheet",
                    "in": "path",
                    "description": "The theme's stylesheet. This uniquely identifies the theme.",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp\/v2\/plugins": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "status",
                    "in": "query",
                    "description": "Limits results to plugins with the given status.",
                    "required": false,
                    "schema": {
                        "items": {
                            "type": "string",
                            "enum": ["inactive", "active"]
                        }
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "slug": {
                                        "description": "WordPress.org plugin directory slug.",
                                        "type": "string",
                                        "required": true,
                                        "pattern": "[\\w\\-]+"
                                    },
                                    "status": {
                                        "description": "The plugin activation status.",
                                        "default": "inactive",
                                        "type": "string",
                                        "enum": ["inactive", "active"]
                                    }
                                },
                                "required": ["slug"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/plugins\/{plugin}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "plugin",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "plugin",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "context": {
                                        "description": "Scope under which the request is made; determines fields present in response.",
                                        "default": "view",
                                        "type": "string",
                                        "enum": ["view", "embed", "edit"]
                                    },
                                    "status": {
                                        "description": "The plugin activation status.",
                                        "type": "string",
                                        "enum": ["inactive", "active"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "plugin",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "context": {
                                        "description": "Scope under which the request is made; determines fields present in response.",
                                        "default": "view",
                                        "type": "string",
                                        "enum": ["view", "embed", "edit"]
                                    },
                                    "status": {
                                        "description": "The plugin activation status.",
                                        "type": "string",
                                        "enum": ["inactive", "active"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "plugin",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "context": {
                                        "description": "Scope under which the request is made; determines fields present in response.",
                                        "default": "view",
                                        "type": "string",
                                        "enum": ["view", "embed", "edit"]
                                    },
                                    "status": {
                                        "description": "The plugin activation status.",
                                        "type": "string",
                                        "enum": ["inactive", "active"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/plugin"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "plugin",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "context": {
                                        "description": "Scope under which the request is made; determines fields present in response.",
                                        "default": "view",
                                        "type": "string",
                                        "enum": ["view", "embed", "edit"]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/sidebars": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/sidebar"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/sidebars\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/sidebar"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The id of a registered sidebar",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/sidebar"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "widgets": {
                                        "description": "Nested widgets.",
                                        "type": "array",
                                        "items": {
                                            "type": ["object", "string"]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/sidebar"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "widgets": {
                                        "description": "Nested widgets.",
                                        "type": "array",
                                        "items": {
                                            "type": ["object", "string"]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/sidebar"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "widgets": {
                                        "description": "Nested widgets.",
                                        "type": "array",
                                        "items": {
                                            "type": ["object", "string"]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/widget-types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/widget-types\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget-type"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The widget type id.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/widget-types\/{id}\/encode": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The widget type id.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "instance": {
                                        "description": "Current instance settings of the widget.",
                                        "type": "object"
                                    },
                                    "form_data": {
                                        "description": "Serialized widget form data to encode into instance settings.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/widget-types\/{id}\/render": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "The widget type id.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "instance": {
                                        "description": "Current instance settings of the widget.",
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/widgets": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "sidebar",
                    "in": "query",
                    "description": "The sidebar to return widgets for.",
                    "required": false,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "description": "Unique identifier for the widget.",
                                        "type": "string"
                                    },
                                    "id_base": {
                                        "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                                        "type": "string"
                                    },
                                    "sidebar": {
                                        "description": "The sidebar the widget belongs to.",
                                        "default": "wp_inactive_widgets",
                                        "type": "string",
                                        "required": true
                                    },
                                    "instance": {
                                        "description": "Instance settings of the widget, if supported.",
                                        "type": "object",
                                        "properties": {
                                            "encoded": {
                                                "description": "Base64 encoded representation of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "hash": {
                                                "description": "Cryptographic hash of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "raw": {
                                                "description": "Unencoded instance settings, if supported.",
                                                "type": "object",
                                                "context": ["edit"]
                                            }
                                        }
                                    },
                                    "form_data": {
                                        "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                                        "type": "string"
                                    }
                                },
                                "required": ["sidebar"]
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/widgets\/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the widget.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_base": {
                                        "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                                        "type": "string"
                                    },
                                    "sidebar": {
                                        "description": "The sidebar the widget belongs to.",
                                        "type": "string"
                                    },
                                    "instance": {
                                        "description": "Instance settings of the widget, if supported.",
                                        "type": "object",
                                        "properties": {
                                            "encoded": {
                                                "description": "Base64 encoded representation of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "hash": {
                                                "description": "Cryptographic hash of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "raw": {
                                                "description": "Unencoded instance settings, if supported.",
                                                "type": "object",
                                                "context": ["edit"]
                                            }
                                        }
                                    },
                                    "form_data": {
                                        "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the widget.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_base": {
                                        "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                                        "type": "string"
                                    },
                                    "sidebar": {
                                        "description": "The sidebar the widget belongs to.",
                                        "type": "string"
                                    },
                                    "instance": {
                                        "description": "Instance settings of the widget, if supported.",
                                        "type": "object",
                                        "properties": {
                                            "encoded": {
                                                "description": "Base64 encoded representation of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "hash": {
                                                "description": "Cryptographic hash of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "raw": {
                                                "description": "Unencoded instance settings, if supported.",
                                                "type": "object",
                                                "context": ["edit"]
                                            }
                                        }
                                    },
                                    "form_data": {
                                        "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "Unique identifier for the widget.",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id_base": {
                                        "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                                        "type": "string"
                                    },
                                    "sidebar": {
                                        "description": "The sidebar the widget belongs to.",
                                        "type": "string"
                                    },
                                    "instance": {
                                        "description": "Instance settings of the widget, if supported.",
                                        "type": "object",
                                        "properties": {
                                            "encoded": {
                                                "description": "Base64 encoded representation of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "hash": {
                                                "description": "Cryptographic hash of the instance settings.",
                                                "type": "string",
                                                "context": ["edit"]
                                            },
                                            "raw": {
                                                "description": "Unencoded instance settings, if supported.",
                                                "type": "object",
                                                "context": ["edit"]
                                            }
                                        }
                                    },
                                    "form_data": {
                                        "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/widget"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }],
                "requestBody": {
                    "content": {
                        "application\/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "force": {
                                        "description": "Whether to force removal of the widget, or move it to the inactive sidebar.",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/block-directory\/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/block-directory-item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "term",
                    "in": "query",
                    "description": "Limit result set to blocks matching the search term.",
                    "required": true,
                    "schema": {
                        "minLength": 1
                    }
                }]
            }
        },
        "\/wp\/v2\/pattern-directory\/patterns": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/pattern-directory-item"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 100,
                        "minimum": 1,
                        "maximum": 100
                    }
                }, {
                    "name": "search",
                    "in": "query",
                    "description": "Limit results to those matching a string.",
                    "required": false,
                    "schema": {
                        "minLength": 1
                    }
                }, {
                    "name": "category",
                    "in": "query",
                    "description": "Limit results to those matching a category ID.",
                    "required": false,
                    "schema": {
                        "minimum": 1
                    }
                }, {
                    "name": "keyword",
                    "in": "query",
                    "description": "Limit results to those matching a keyword ID.",
                    "required": false,
                    "schema": {
                        "minimum": 1
                    }
                }, {
                    "name": "slug",
                    "in": "query",
                    "description": "Limit results to those matching a pattern (slug).",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "offset",
                    "in": "query",
                    "description": "Offset the result set by a specific number of items.",
                    "required": false,
                    "schema": {}
                }, {
                    "name": "order",
                    "in": "query",
                    "description": "Order sort attribute ascending or descending.",
                    "required": false,
                    "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"]
                    }
                }, {
                    "name": "orderby",
                    "in": "query",
                    "description": "Sort collection by post attribute.",
                    "required": false,
                    "schema": {
                        "default": "date",
                        "enum": ["author", "date", "id", "include", "modified", "parent", "relevance", "slug", "include_slugs", "title", "favorite_count"]
                    }
                }]
            }
        },
        "\/wp\/v2\/block-patterns\/patterns": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/block-pattern"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/block-patterns\/categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/block-pattern-category"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp\/v2\/menu-locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/menu-location"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/menu-locations\/{location}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/menu-location"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "location",
                    "in": "path",
                    "description": "An alphanumeric identifier for the menu location.",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }]
            }
        },
        "\/wp\/v2\/font-collections": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/font-collection"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "page",
                    "in": "query",
                    "description": "Current page of the collection.",
                    "required": false,
                    "schema": {
                        "default": 1,
                        "minimum": 1
                    }
                }, {
                    "name": "per_page",
                    "in": "query",
                    "description": "Maximum number of items to be returned in result set.",
                    "required": false,
                    "schema": {
                        "default": 10,
                        "minimum": 1,
                        "maximum": 100
                    }
                }]
            }
        },
        "\/wp\/v2\/font-collections\/{slug}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/font-collection"
                                }
                            }
                        }
                    }
                },
                "parameters": [{
                    "name": "context",
                    "in": "query",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "required": false,
                    "schema": {
                        "default": "view",
                        "enum": ["view", "embed", "edit"]
                    }
                }, {
                    "name": "slug",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/wp-site-health\/v1": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "wp-site-health\/v1"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "view"
                    }
                }]
            }
        },
        "\/wp-site-health\/v1\/tests\/background-updates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp-site-health-test"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp-site-health\/v1\/tests\/loopback-requests": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp-site-health-test"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp-site-health\/v1\/tests\/https-status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp-site-health-test"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp-site-health\/v1\/tests\/dotorg-communication": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp-site-health-test"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp-site-health\/v1\/tests\/authorization-header": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/wp-site-health-test"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/wp-site-health\/v1\/directory-sizes": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/wp-site-health\/v1\/tests\/page-cache": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/wp-block-editor\/v1": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "wp-block-editor\/v1"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "view"
                    }
                }]
            }
        },
        "\/wp-block-editor\/v1\/url-details": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "url",
                    "in": "query",
                    "description": "The URL to process.",
                    "required": true,
                    "schema": {
                        "format": "uri"
                    }
                }]
            }
        },
        "\/wp-block-editor\/v1\/export": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/wp-block-editor\/v1\/navigation-fallback": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/navigation-fallback"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/acf\/v3": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "namespace",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "acf\/v3"
                    }
                }, {
                    "name": "context",
                    "in": "query",
                    "description": "",
                    "required": false,
                    "schema": {
                        "default": "view"
                    }
                }]
            }
        },
        "\/acf\/v3\/posts\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/posts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/pages\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/pages": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/media\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/media": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/menu-items\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/menu-items": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/oembed_cache\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/oembed_cache": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/blocks\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/blocks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/templates\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/templates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/template-parts\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/template-parts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/global-styles\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/global-styles": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/navigation\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/navigation": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/font-families\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/font-families": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/font-families\/{font_family_id}\/font-faces\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/font-families\/{font_family_id}\/font-faces": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "font_family_id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/acf-taxonomy\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/acf-taxonomy": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/acf-post-type\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/acf-post-type": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/acf-ui-options-page\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/acf-ui-options-page": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/acf-field-group\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/acf-field-group": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/acf-field\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/acf-field": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/categories\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/tags\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/tags": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/menus\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/menus": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/link_category\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/link_category": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/post_format\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/post_format": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/wp_theme\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/wp_theme": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/wp_template_part_area\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/wp_template_part_area": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/wp_pattern_category\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/wp_pattern_category": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/comments\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/comments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "\/acf\/v3\/options\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/users\/{id}\/{field}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }, {
                    "name": "field",
                    "in": "path",
                    "description": "",
                    "required": true,
                    "schema": {}
                }]
            }
        },
        "\/acf\/v3\/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}